{
  "hash": "3590efd2a942cfebad03607f9da40be0",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Modelos ADRL\nsubtitle: Descubre cómo seleccionar hardware, descargar la imagen ISO y preparar los medios de instalación. Exploraremos opciones para probar o instalar Linux en tu equipo.\ndescription: |\n  Únete a esta emocionante serie de introducción a Linux, donde te guiaré a través de los pasos para descargar e instalar GNU/Linux en tu equipo. Aprenderás a seleccionar el hardware adecuado, descargar la imagen ISO de tu distribución preferida y preparar los medios de instalación. Además, exploraremos diferentes opciones para probar o instalar Linux. ¡Embárcate en esta aventura y descubre el poder de GNU/Linux!\ncategories:\n  - Informática\n  - Tecnología\n  - Sistemas Operativos\n  - Linux\ntags:\n  - Linux\n  - OpenSource\n  - GNU/Linux\n  - SistemasOperativos\n  - DistribucionesLinux\n  - DescargaDeLinux\n  - InstalaciónDeLinux\n  - Hardware\n  - ImagenISO\ndate: \"08/27/2023\"\n---\n\n\n\n\n\n\n# Modelos ADRL\n\n## Teoría\n\nUna vez que hemos analizado diversas técnicas de series de tiempo, el problema consiste en seleccionar el modelo correcto. La Figura \\@ref(fig:fig91) muestra un esquema o diagrama de cómo podríamos proceder para seleccionar el modelo correcto.\n\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nknitr::include_graphics(\"TimeSeries_Models.png\") \n```\n\n::: {.cell-output-display}\n![Method selection for time series data. OLS: Ordinary least squares; VAR: Vector autoregressive; ARDL: Autoregressive distributed lags; ECM: Error correction models, retomado de: Shrestha y Bhatta (2018)](TimeSeries_Models.png){fig-align='center' width=95%}\n:::\n:::\n\n\n\n\n\n\nEn este caso incorporaremos a los modelos autogregressive distributed lag models (ARDL, por sus siglas en inglés). En estos casos el procedimiento de Johansen no podría aplicarse directamennte cuando las variables incluidas son de un orden mixto o cuando simplemente todas no son estacionarias. Un modelo ARDL está basado en procedimientos de MCO.\n\nEste tipo de modelos toma suficientes rezagos para capturar el mecanismo generador de datos. También es posible llegar a una especificación del mecanismo corrector de errores a partir de una trasformación lineal del ARDL. \n\nConsideremos la siguiente ecuación:\n\\begin{equation}\n    Y_t = \\alpha + \\delta X_t + \\gamma Z_t + U_t\n    (\\#eq:EqARDL)\n\\end{equation}\n\nDada la ecuación \\@ref(eq:EqARDL) podemos establecer su forma de mecanismo corrector de errores en forma ARDL dada por:\n\\begin{eqnarray*}\n    \\Delta Y_t & = & \\alpha + \\sum_{i = 1}^p \\beta_i \\Delta Y_{t-i} + \\sum_{i = 1}^p \\delta_i \\Delta X_{t-i} + \\sum_{i = 1}^p \\gamma_i \\Delta Z_{t-i} \\\\ \n    &  & + \\lambda_1 Y_{t-1} + \\lambda_2 X_{t-1} + \\lambda_3 Z_{t-1} + U_t\n\\end{eqnarray*}\n\nDonde los coeficientes $\\beta_i$, $\\delta_i$, $\\gamma_i$ representan la dinámica de corto plazo y las $\\lambda$'s la dinámica de largo plazo.\n\nLa hipótesis nula ($H_0$) es que las $\\lambda_1 + \\lambda_2 + \\lambda_3 = 0$, es decir, que no existe relación de largo plazo.\n\nEn la práctica estimamos una especificación con rezafos distribuidos:\n\\begin{equation}\n    Y_t = \\alpha + \\sum_{i = 1}^p \\beta_i Y_{t-i} + \\sum_{i = 1}^p \\delta_i X_{t-i} + \\sum_{i = 1}^p \\gamma_i Z_{t-i} + U_t\n\\end{equation}\n\nAdemás de verificar si las series involucradas son estacionarias y decidir el número de reagos $p$ mediante criterios de información.\n\n## Ejemplo\n\n### DESCRIPCIÓN DEL PROBLEMA\n\nSupongamos que queremos modelar el logaritmo de dinero (M2) como una función de LRY (logarithm of real income), IBO (bond rate) e IDE (bank deposit rate). \n\n* El problema es que la aplicación de una regresión de MCO en datos no estacionarios daría lugar a una regresión espúria. \n\n* Los parámetros estimados serían consistentes solo si las series estuvieran cointegradas.\n \n### Importamos Datos desde un dataset de R:\n\nA data frame with 55 rows and 5 variables. Time period from 1974:Q1 until 1987:Q3.\n\nLRM: logarithm of real money, M2\n\nLRY: logarithm of real income\n\nLPY: logarithm of price deflator\n\nIBO: bond rate\n\nIDE: bank deposit rate\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(zoo) \nlibrary(xts) \nlibrary(ARDL)\n\n#\ndata(denmark)\n\nnames(denmark)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"LRM\" \"LRY\" \"LPY\" \"IBO\" \"IDE\"\n```\n\n\n:::\n:::\n\n\n\n\n\n\n### Procedimiento:\n\n1. Calculamos un auto ADRL para determinar la combinación óptima de rezagos.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodels <- auto_ardl(LRM ~ LRY + IBO + IDE, data = denmark, max_order = 5)\n\nnames(models)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"best_model\" \"best_order\" \"top_orders\"\n```\n\n\n:::\n\n```{.r .cell-code}\n#\nmodels$top_orders\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   LRM LRY IBO IDE       AIC\n1    3   1   3   2 -251.0259\n2    3   1   3   3 -250.1144\n3    2   2   0   0 -249.6266\n4    3   2   3   2 -249.1087\n5    3   2   3   3 -248.1858\n6    2   2   0   1 -247.7786\n7    2   1   0   0 -247.5643\n8    2   2   1   1 -246.6885\n9    3   3   3   3 -246.3061\n10   2   2   1   2 -246.2709\n11   2   1   1   1 -245.8736\n12   2   2   2   2 -245.7722\n13   1   1   0   0 -245.6620\n14   2   1   2   2 -245.1712\n15   3   1   2   2 -245.0996\n16   1   0   0   0 -244.4317\n17   1   1   0   1 -243.7702\n18   5   5   5   5 -243.3120\n19   4   1   3   2 -243.0728\n20   4   1   3   3 -242.4378\n```\n\n\n:::\n\n```{.r .cell-code}\n#\nmodels$best_order\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nLRM LRY IBO IDE \n  3   1   3   2 \n```\n\n\n:::\n\n```{.r .cell-code}\n#\nmodels$best_model\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nTime series regression with \"zooreg\" data:\nStart = 1974 Q4, End = 1987 Q3\n\nCall:\ndynlm::dynlm(formula = full_formula, data = data, start = start, \n    end = end)\n\nCoefficients:\n(Intercept)    L(LRM, 1)    L(LRM, 2)    L(LRM, 3)          LRY    L(LRY, 1)  \n     2.6202       0.3192       0.5326      -0.2687       0.6728      -0.2574  \n        IBO    L(IBO, 1)    L(IBO, 2)    L(IBO, 3)          IDE    L(IDE, 1)  \n    -1.0785      -0.1062       0.2877      -0.9947       0.1255      -0.3280  \n  L(IDE, 2)  \n     1.4079  \n```\n\n\n:::\n\n```{.r .cell-code}\n#\nBestMod <- models$best_model\n\nsummary(BestMod)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nTime series regression with \"zooreg\" data:\nStart = 1974 Q4, End = 1987 Q3\n\nCall:\ndynlm::dynlm(formula = full_formula, data = data, start = start, \n    end = end)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.029939 -0.008856 -0.002562  0.008190  0.072577 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   2.6202     0.5678   4.615 4.19e-05 ***\nL(LRM, 1)     0.3192     0.1367   2.336 0.024735 *  \nL(LRM, 2)     0.5326     0.1324   4.024 0.000255 ***\nL(LRM, 3)    -0.2687     0.1021  -2.631 0.012143 *  \nLRY           0.6728     0.1312   5.129 8.32e-06 ***\nL(LRY, 1)    -0.2574     0.1472  -1.749 0.088146 .  \nIBO          -1.0785     0.3217  -3.353 0.001790 ** \nL(IBO, 1)    -0.1062     0.5858  -0.181 0.857081    \nL(IBO, 2)     0.2877     0.5691   0.505 0.616067    \nL(IBO, 3)    -0.9947     0.3925  -2.534 0.015401 *  \nIDE           0.1255     0.5545   0.226 0.822161    \nL(IDE, 1)    -0.3280     0.7213  -0.455 0.651847    \nL(IDE, 2)     1.4079     0.5520   2.550 0.014803 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.0191 on 39 degrees of freedom\nMultiple R-squared:  0.988,\tAdjusted R-squared:  0.9843 \nF-statistic: 266.8 on 12 and 39 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n:::\n\n\n\n\n\n\n2. UECM (Unrestricted Error Correction Model) of the underlying ARDL.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nUECM_BestMod <- uecm(BestMod)\n\nsummary(UECM_BestMod)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nTime series regression with \"zooreg\" data:\nStart = 1974 Q4, End = 1987 Q3\n\nCall:\ndynlm::dynlm(formula = full_formula, data = data, start = start, \n    end = end)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.029939 -0.008856 -0.002562  0.008190  0.072577 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   2.62019    0.56777   4.615 4.19e-05 ***\nL(LRM, 1)    -0.41685    0.09166  -4.548 5.15e-05 ***\nL(LRY, 1)     0.41538    0.11761   3.532  0.00108 ** \nL(IBO, 1)    -1.89172    0.39111  -4.837 2.09e-05 ***\nL(IDE, 1)     1.20534    0.44690   2.697  0.01028 *  \nd(L(LRM, 1)) -0.26394    0.10192  -2.590  0.01343 *  \nd(L(LRM, 2))  0.26867    0.10213   2.631  0.01214 *  \nd(LRY)        0.67280    0.13116   5.129 8.32e-06 ***\nd(IBO)       -1.07852    0.32170  -3.353  0.00179 ** \nd(L(IBO, 1))  0.70701    0.46874   1.508  0.13953    \nd(L(IBO, 2))  0.99468    0.39251   2.534  0.01540 *  \nd(IDE)        0.12546    0.55445   0.226  0.82216    \nd(L(IDE, 1)) -1.40786    0.55204  -2.550  0.01480 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.0191 on 39 degrees of freedom\nMultiple R-squared:  0.7458,\tAdjusted R-squared:  0.6676 \nF-statistic: 9.537 on 12 and 39 DF,  p-value: 3.001e-08\n```\n\n\n:::\n:::\n\n\n\n\n\n\n3. RECM (Restricted Error Correction Model) of the underlying ARDL\nObs: allowing the constant to join the short-run relationship (case 2), instead of the long-run (case 3)\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nRECM_BestMod <- recm(UECM_BestMod, case = 2)\n\nsummary(RECM_BestMod)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nTime series regression with \"zooreg\" data:\nStart = 1974 Q4, End = 1987 Q3\n\nCall:\ndynlm::dynlm(formula = full_formula, data = data, start = start, \n    end = end)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.029939 -0.008856 -0.002562  0.008190  0.072577 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \nd(L(LRM, 1)) -0.26394    0.09008  -2.930 0.005405 ** \nd(L(LRM, 2))  0.26867    0.09127   2.944 0.005214 ** \nd(LRY)        0.67280    0.11591   5.805 7.03e-07 ***\nd(IBO)       -1.07852    0.30025  -3.592 0.000837 ***\nd(L(IBO, 1))  0.70701    0.44359   1.594 0.118300    \nd(L(IBO, 2))  0.99468    0.36491   2.726 0.009242 ** \nd(IDE)        0.12546    0.48290   0.260 0.796248    \nd(L(IDE, 1)) -1.40786    0.48867  -2.881 0.006160 ** \nect          -0.41685    0.07849  -5.311 3.63e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.01819 on 43 degrees of freedom\n  (0 observations deleted due to missingness)\nMultiple R-squared:  0.7613,\tAdjusted R-squared:  0.7113 \nF-statistic: 15.24 on 9 and 43 DF,  p-value: 9.545e-11\n```\n\n\n:::\n:::\n\n\n\n\n\n\n4. long-run levels relationship (cointegration) \n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbounds_f_test(BestMod, case = 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tBounds F-test (Wald) for no cointegration\n\ndata:  d(LRM) ~ L(LRM, 1) + L(LRY, 1) + L(IBO, 1) + L(IDE, 1) + d(L(LRM,     1)) + d(L(LRM, 2)) + d(LRY) + d(IBO) + d(L(IBO, 1)) + d(L(IBO,     2)) + d(IDE) + d(L(IDE, 1))\nF = 5.1168, p-value = 0.004418\nalternative hypothesis: Possible cointegration\nnull values:\n   k    T \n   3 1000 \n```\n\n\n:::\n:::\n\n\n\n\n\n\n5. Long-run multipliers (with standard errors, t-statistics and p-values)\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmultipliers(BestMod)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         Term   Estimate Std. Error   t value     Pr(>|t|)\n1 (Intercept)  6.2856579  0.7719160  8.142930 6.107445e-10\n2         LRY  0.9964676  0.1239310  8.040503 8.358472e-10\n3         IBO -4.5381160  0.5202961 -8.722180 1.058619e-10\n4         IDE  2.8915201  0.9950853  2.905801 6.009239e-03\n```\n\n\n:::\n\n```{.r .cell-code}\n#\nResult <- coint_eq(BestMod, case = 2)\n```\n:::\n\n\n\n\n\n\n### Make the plot\n\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nDatos <- cbind.zoo(LRM = denmark[,\"LRM\"], Result)\n\nDatos <- xts(Datos)\n\nplot(Datos, legend.loc = \"right\")\n```\n\n::: {.cell-output-display}\n![Gráfica de la ecuación de cointegración](index_files/figure-html/fig92-1.png){fig-align='center' width=95%}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}