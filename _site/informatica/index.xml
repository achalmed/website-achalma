<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Dr Edison Achalma | Economía | Matemática | Informática | Filosofía</title>
<link>https://achalmaedison.netlify.app/informatica/</link>
<atom:link href="https://achalmaedison.netlify.app/informatica/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.5.45</generator>
<lastBuildDate>Mon, 01 Jan 2024 05:00:00 GMT</lastBuildDate>
<item>
  <title>por editar</title>
  <dc:creator>Edison Achalma</dc:creator>
  <link>https://achalmaedison.netlify.app/informatica/bloomberg/2024-03-31-por-editar/</link>
  <description><![CDATA[ 







<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Volver arriba</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Cómo citar</h2><div><div class="quarto-appendix-secondary-label">BibTeX</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{achalma2024,
  author = {Achalma, Edison},
  title = {por editar},
  date = {2024-01-01},
  url = {https://achalmaedison.netlify.app//docs/informatica/bloomberg/2024-03-31-por-editar},
  langid = {es}
}
</code></pre><div class="quarto-appendix-secondary-label">Por favor, cita este trabajo como:</div><div id="ref-achalma2024" class="csl-entry quarto-appendix-citeas">
Achalma, E. (2024, January 1). por editar. Retrieved from <a href="https://achalmaedison.netlify.app//docs/informatica/bloomberg/2024-03-31-por-editar">https://achalmaedison.netlify.app//docs/informatica/bloomberg/2024-03-31-por-editar</a>
</div></div></section></div> ]]></description>
  <category>Vacio</category>
  <guid>https://achalmaedison.netlify.app/informatica/bloomberg/2024-03-31-por-editar/</guid>
  <pubDate>Mon, 01 Jan 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>por editar</title>
  <dc:creator>Edison Achalma</dc:creator>
  <link>https://achalmaedison.netlify.app/informatica/cpp/2024-03-31-por-editar/</link>
  <description><![CDATA[ 







<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-citation"><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{achalma2024,
  author = {Achalma, Edison},
  title = {Por Editar},
  date = {2024-01-01},
  url = {https://kapitan.net/informatica/cpp/2024-03-31-por-editar},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-achalma2024" class="csl-entry quarto-appendix-citeas">
Achalma, E. (2024, January 1). por editar. Retrieved from <a href="https://kapitan.net/informatica/cpp/2024-03-31-por-editar">https://kapitan.net/informatica/cpp/2024-03-31-por-editar</a>
</div></div></section></div> ]]></description>
  <category>Vacio</category>
  <guid>https://achalmaedison.netlify.app/informatica/cpp/2024-03-31-por-editar/</guid>
  <pubDate>Mon, 01 Jan 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>por editar</title>
  <dc:creator>Edison Achalma</dc:creator>
  <link>https://achalmaedison.netlify.app/informatica/eviews/2024-03-31-por-editar/</link>
  <description><![CDATA[ 







<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-citation"><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{achalma2024,
  author = {Achalma, Edison},
  title = {Por Editar},
  date = {2024-01-01},
  url = {https://kapitan.net/informatica/eviews/2024-03-31-por-editar},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-achalma2024" class="csl-entry quarto-appendix-citeas">
Achalma, E. (2024, January 1). por editar. Retrieved from <a href="https://kapitan.net/informatica/eviews/2024-03-31-por-editar">https://kapitan.net/informatica/eviews/2024-03-31-por-editar</a>
</div></div></section></div> ]]></description>
  <category>Vacio</category>
  <guid>https://achalmaedison.netlify.app/informatica/eviews/2024-03-31-por-editar/</guid>
  <pubDate>Mon, 01 Jan 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>por editar</title>
  <dc:creator>Edison Achalma</dc:creator>
  <link>https://achalmaedison.netlify.app/informatica/fundamentos-programacion/2024-03-31-por-editar/</link>
  <description><![CDATA[ 







<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-citation"><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{achalma2024,
  author = {Achalma, Edison},
  title = {Por Editar},
  date = {2024-01-01},
  url = {https://kapitan.net/informatica/fundamentos-programacion/2024-03-31-por-editar},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-achalma2024" class="csl-entry quarto-appendix-citeas">
Achalma, E. (2024, January 1). por editar. Retrieved from <a href="https://kapitan.net/informatica/fundamentos-programacion/2024-03-31-por-editar">https://kapitan.net/informatica/fundamentos-programacion/2024-03-31-por-editar</a>
</div></div></section></div> ]]></description>
  <category>Vacio</category>
  <guid>https://achalmaedison.netlify.app/informatica/fundamentos-programacion/2024-03-31-por-editar/</guid>
  <pubDate>Mon, 01 Jan 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>por editar</title>
  <dc:creator>Edison Achalma</dc:creator>
  <link>https://achalmaedison.netlify.app/informatica/matlab/2024-03-31-por-editar/</link>
  <description><![CDATA[ 







<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-citation"><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{achalma2024,
  author = {Achalma, Edison},
  title = {Por Editar},
  date = {2024-01-01},
  url = {https://kapitan.net/informatica/matlab/2024-03-31-por-editar},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-achalma2024" class="csl-entry quarto-appendix-citeas">
Achalma, E. (2024, January 1). por editar. Retrieved from <a href="https://kapitan.net/informatica/matlab/2024-03-31-por-editar">https://kapitan.net/informatica/matlab/2024-03-31-por-editar</a>
</div></div></section></div> ]]></description>
  <category>Vacio</category>
  <guid>https://achalmaedison.netlify.app/informatica/matlab/2024-03-31-por-editar/</guid>
  <pubDate>Mon, 01 Jan 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>por editar</title>
  <dc:creator>Edison Achalma</dc:creator>
  <link>https://achalmaedison.netlify.app/informatica/ofimatica/2024-03-31-por-editar/</link>
  <description><![CDATA[ 







<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-citation"><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{achalma2024,
  author = {Achalma, Edison},
  title = {Por Editar},
  date = {2024-01-01},
  url = {https://kapitan.net/informatica/ofimatica/2024-03-31-por-editar},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-achalma2024" class="csl-entry quarto-appendix-citeas">
Achalma, E. (2024, January 1). por editar. Retrieved from <a href="https://kapitan.net/informatica/ofimatica/2024-03-31-por-editar">https://kapitan.net/informatica/ofimatica/2024-03-31-por-editar</a>
</div></div></section></div> ]]></description>
  <category>Vacio</category>
  <guid>https://achalmaedison.netlify.app/informatica/ofimatica/2024-03-31-por-editar/</guid>
  <pubDate>Mon, 01 Jan 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>por editar</title>
  <dc:creator>Edison Achalma</dc:creator>
  <link>https://achalmaedison.netlify.app/informatica/power-bi/2024-03-31-por-editar/</link>
  <description><![CDATA[ 







<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Volver arriba</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Cómo citar</h2><div><div class="quarto-appendix-secondary-label">BibTeX</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{achalma2024,
  author = {Achalma, Edison},
  title = {por editar},
  date = {2024-01-01},
  url = {https://achalmaedison.netlify.app//docs/informatica/power-bi/2024-03-31-por-editar},
  langid = {es}
}
</code></pre><div class="quarto-appendix-secondary-label">Por favor, cita este trabajo como:</div><div id="ref-achalma2024" class="csl-entry quarto-appendix-citeas">
Achalma, E. (2024, January 1). por editar. Retrieved from <a href="https://achalmaedison.netlify.app//docs/informatica/power-bi/2024-03-31-por-editar">https://achalmaedison.netlify.app//docs/informatica/power-bi/2024-03-31-por-editar</a>
</div></div></section></div> ]]></description>
  <category>Vacio</category>
  <guid>https://achalmaedison.netlify.app/informatica/power-bi/2024-03-31-por-editar/</guid>
  <pubDate>Mon, 01 Jan 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>por editar</title>
  <dc:creator>Edison Achalma</dc:creator>
  <link>https://achalmaedison.netlify.app/informatica/stata/2024-03-31-por-editar/</link>
  <description><![CDATA[ 







<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-citation"><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{achalma2024,
  author = {Achalma, Edison},
  title = {Por Editar},
  date = {2024-01-01},
  url = {https://kapitan.net/informatica/stata/2024-03-31-por-editar},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-achalma2024" class="csl-entry quarto-appendix-citeas">
Achalma, E. (2024, January 1). por editar. Retrieved from <a href="https://kapitan.net/informatica/stata/2024-03-31-por-editar">https://kapitan.net/informatica/stata/2024-03-31-por-editar</a>
</div></div></section></div> ]]></description>
  <category>Vacio</category>
  <guid>https://achalmaedison.netlify.app/informatica/stata/2024-03-31-por-editar/</guid>
  <pubDate>Mon, 01 Jan 2024 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Configuración de entornos virtuales con Anaconda</title>
  <dc:creator>Edison Achalma</dc:creator>
  <link>https://achalmaedison.netlify.app/informatica/python/2023-06-20-02-configurar-entorno-virtual-python-anaconda/</link>
  <description><![CDATA[ 




<section id="introducción" class="level1">
<h1>Introducción</h1>
<p>¡Bienvenidos al blog! En esta ocasión, exploraremos un tema fundamental para cualquier desarrollador o entusiasta de Python: la configuración de un entorno virtual utilizando Anaconda. Si alguna vez te has preguntado cómo mantener tus proyectos de Python aislados, organizados y libres de conflictos de dependencias, estás en el lugar correcto.</p>
<p>¿Alguna vez has encontrado problemas al trabajar en múltiples proyectos de Python, donde las diferentes versiones de las bibliotecas y paquetes interfieren entre sí? ¡No te preocupes! Configurar un entorno virtual es la solución perfecta para mantener todo bajo control.</p>
<p>Imagina tener la capacidad de crear espacios de trabajo aislados y personalizados para cada proyecto, sin preocuparte por conflictos entre las versiones de las bibliotecas o paquetes. Con Anaconda, una poderosa plataforma de gestión de paquetes y ambientes virtuales, puedes lograr precisamente eso.</p>
<p>En este blog, te guiaremos paso a paso en la configuración de tu primer entorno virtual utilizando Anaconda. Aprenderás cómo crear ambientes virtuales, instalar paquetes y bibliotecas específicos, y alternar fácilmente entre ellos para cada proyecto.</p>
<p>Ya sea que seas un desarrollador principiante o experimentado, este blog te brindará los conocimientos necesarios para dominar el arte de la configuración de entornos virtuales con Anaconda. ¡Prepárate para simplificar tu vida como desarrollador de Python y llevar tus proyectos al siguiente nivel!</p>
<p>¡Comencemos esta emocionante aventura de configuración de entornos virtuales con Anaconda!</p>
</section>
<section id="qué-es-un-entorno-virtual" class="level1">
<h1>¿Qué es un entorno virtual?</h1>
<p>Si estas en el mundo de la programación en Python, es posible que hayas oído hablar del término “entorno virtual”.</p>
<p>Cuando hablamos de un entorno virtual, nos referimos a un ambiente aislado y autónomo donde puedes desarrollar y ejecutar tus proyectos de Python de manera independiente. En otras palabras, es como tener una burbuja protegiendo tus proyectos y asegurándote de que las bibliotecas y paquetes que utilices no entren en conflicto con otras versiones o dependencias de Python que puedas tener instaladas en tu sistema operativo.</p>
<section id="cuáles-son-los-beneficios-de-trabajar-con-entornos-virtuales-en-proyectos-de-python-en-linux" class="level2">
<h2 class="anchored" data-anchor-id="cuáles-son-los-beneficios-de-trabajar-con-entornos-virtuales-en-proyectos-de-python-en-linux">¿Cuáles son los beneficios de trabajar con entornos virtuales en proyectos de Python en Linux?</h2>
<p>Permíteme destacar algunos puntos clave:</p>
<ol type="1">
<li><p><strong>Aislamiento:</strong> Los entornos virtuales te permiten tener control total sobre las versiones de las bibliotecas y paquetes que utilizas en tus proyectos. Esto significa que puedes crear un ambiente aislado para cada proyecto, evitando conflictos y problemas de compatibilidad entre diferentes versiones de Python y sus dependencias.</p></li>
<li><p><strong>Portabilidad:</strong> Al utilizar entornos virtuales, puedes compartir fácilmente tus proyectos con otros desarrolladores o ejecutarlos en diferentes máquinas sin preocuparte por las diferencias en las configuraciones del sistema. Todo lo que necesitas es compartir el archivo de requisitos del entorno virtual y cualquiera podrá recrear el mismo ambiente de trabajo en su propia máquina.</p></li>
<li><p><strong>Mantenimiento sencillo:</strong> Los entornos virtuales facilitan la gestión de tus proyectos. Puedes instalar y actualizar paquetes de forma independiente dentro de cada ambiente virtual, sin afectar a otros proyectos o al sistema operativo en sí. Además, si algo sale mal en un entorno virtual, puedes solucionarlo sin que afecte a tus otros proyectos.</p></li>
<li><p><strong>Experimentación segura:</strong> Si quieres probar una nueva biblioteca o una versión diferente de una dependencia en particular, un entorno virtual te proporciona un espacio seguro para hacerlo. Puedes instalar y probar nuevas bibliotecas sin preocuparte de que afecten a otros proyectos o rompan la funcionalidad existente.</p></li>
</ol>
</section>
</section>
<section id="anaconda" class="level1">
<h1>Anaconda</h1>
<p>¿Qué es Anaconda? Es mucho más que una simple herramienta, es una plataforma completa de gestión de paquetes y entornos virtuales diseñada específicamente para los amantes de Python como tú.</p>
<p>Entonces, ¿por qué deberías elegir Anaconda frente a otras herramientas? Permíteme contarte algunas de las ventajas que hacen de Anaconda una elección excepcional:</p>
<ol type="1">
<li><p><strong>Gestión de paquetes simplificada:</strong> Con Anaconda, olvídate de preocuparte por instalar y gestionar paquetes individualmente. Anaconda tiene su propio sistema de gestión de paquetes llamado “conda”, que te permite instalar, actualizar y eliminar paquetes de manera sencilla y eficiente. Además, Anaconda cuenta con un amplio repositorio de paquetes precompilados que puedes explorar y utilizar en tus proyectos con un solo comando.</p></li>
<li><p><strong>Creación de entornos virtuales sin complicaciones:</strong> ¿Recuerdas la importancia de los entornos virtuales que discutimos anteriormente? Bueno, con Anaconda, crear y gestionar entornos virtuales es pan comido. Puedes crear un entorno virtual aislado para cada proyecto en cuestión de segundos. Además, puedes especificar fácilmente la versión de Python y las dependencias requeridas para cada entorno virtual, manteniendo todo organizado y libre de conflictos.</p></li>
<li><p><strong>Multiplataforma:</strong> Ya sea que estés utilizando Linux, Windows o macOS, Anaconda te tiene cubierto. Esta plataforma es compatible con múltiples sistemas operativos, lo que significa que puedes disfrutar de las mismas ventajas y características sin importar el entorno en el que te encuentres. Así que no importa si eres un entusiasta de Linux, un defensor de Windows o un fanático de macOS, Anaconda estará a tu lado.</p></li>
<li><p><strong>Integración con herramientas adicionales:</strong> Anaconda no solo se detiene en la gestión de paquetes y entornos virtuales, sino que también ofrece una amplia gama de herramientas y utilidades adicionales que pueden mejorar tu flujo de trabajo. Desde el entorno de desarrollo integrado (IDE) llamado Anaconda Navigator, hasta la potencia de Jupyter Notebooks y la facilidad de distribución con Anaconda Cloud, hay muchas herramientas a tu disposición para mejorar tu productividad y simplificar tu desarrollo.</p></li>
</ol>
</section>
<section id="instalación-de-anaconda-en-ubuntu-linux" class="level1">
<h1>Instalación de Anaconda en Ubuntu Linux</h1>
<p>Si estás utilizando Ubuntu Linux y te emociona comenzar a trabajar con Anaconda. Te guiaré a través de los pasos para descargar e instalar Anaconda en tu sistema Ubuntu Linux.</p>
<p><strong>Paso 1: Descargar el instalador de Anaconda</strong></p>
<p>Para empezar, debes visitar el sitio web oficial de Anaconda <a href="https://www.anaconda.com/download/">Descargar Anaconda</a> y descargar el instalador adecuado para tu versión de Ubuntu Linux. Asegúrate de seleccionar la versión de Python que deseas utilizar y si tu sistema operativo es de 32 o 64 bits.</p>
<p><strong>Paso 2: Abrir la terminal</strong></p>
<p>Una vez que hayas descargado el instalador de Anaconda, abre la terminal en tu sistema Ubuntu Linux. Puedes hacerlo utilizando el atajo de teclado Ctrl + Alt + T o buscando “Terminal” en el menú de aplicaciones.</p>
<p><strong>Paso 3: Navegar a la ubicación del instalador</strong></p>
<p>En la terminal, navega hasta la ubicación donde descargaste el instalador de Anaconda. Por ejemplo, si lo descargaste en la carpeta “Descargas”, puedes usar el comando siguiente para ir a esa ubicación:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> Descargas</span></code></pre></div>
<p>Recuerda reemplazar “Descargas” con la carpeta en la que hayas guardado el archivo.</p>
<p><strong>Paso 4: Ejecutar el instalador de Anaconda</strong></p>
<p>Una vez que estés en la ubicación del instalador de Anaconda, puedes ejecutar el siguiente comando para iniciar el proceso de instalación:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bash</span> nombre_del_instalador.sh</span></code></pre></div>
<p>Asegúrate de reemplazar “nombre_del_instalador.sh” con el nombre real del archivo que descargaste.</p>
<p><strong>Paso 5: Sigue las instrucciones de instalación</strong></p>
<p>Después de ejecutar el comando anterior, seguirás las instrucciones del instalador de Anaconda en la terminal. Acepta los términos de licencia, selecciona la ubicación de instalación y responde cualquier pregunta adicional que se te presente durante el proceso de instalación.</p>
<p><strong>Paso 6: Añadir Anaconda al PATH del sistema</strong></p>
<p>Una vez que la instalación se complete, se te preguntará si deseas agregar Anaconda al PATH del sistema. Es recomendable seleccionar “yes” para que puedas acceder a los comandos de Anaconda desde cualquier ubicación en la terminal.</p>
<p>¡Y eso es todo! Has completado la instalación de Anaconda en tu sistema Ubuntu Linux. Ahora puedes comenzar a aprovechar todas las características y herramientas que ofrece esta increíble plataforma.</p>
<p>Para una guía más detalla para la instalación de Anaconda visite: <a href="../2023-06-19-instalacion-de-anaconda/index.qmd">Instalación de Anaconda en Linux</a></p>
</section>
<section id="configuración-de-un-entorno-virtual-en-conda" class="level1">
<h1>Configuración de un entorno virtual en Conda</h1>
<p><strong>Paso 1: Actualiza Conda</strong>:</p>
<p>Antes de empezar, es una buena práctica asegurarte de tener la versión más reciente de Conda. Abre tu terminal y ejecuta los siguientes comandos:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> update conda</span>
<span id="cb3-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> update <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--all</span></span></code></pre></div>
<p>Esto actualizará Conda y todos los paquetes asociados.</p>
<p><strong>Paso 2: Configura el entorno virtual:</strong></p>
<p>Ahora, vamos a crear un nuevo entorno virtual. En tu terminal, ejecuta el siguiente comando:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> create <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--name</span> nombre_del_entorno</span></code></pre></div>
<p>Reemplaza “nombre_del_entorno” con el nombre que desees darle a tu entorno virtual.</p>
<p><strong>Paso 3: Activa el entorno virtual:</strong></p>
<p>Una vez que hayas creado el entorno virtual, puedes activarlo con el siguiente comando:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> activate nombre_del_entorno</span></code></pre></div>
<p>Esto te permitirá trabajar en el entorno virtual específico.</p>
<p><strong>Paso 4: Desactiva el entorno virtual:</strong></p>
<p>Cuando hayas terminado de trabajar en tu entorno virtual y desees volver al entorno base, simplemente ejecuta el siguiente comando:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> deactivate</span></code></pre></div>
<p>Esto te llevará de vuelta al entorno base de Conda.</p>
<p><strong>Paso 5: Elimina el entorno virtual:</strong></p>
<p>Si en algún momento deseas eliminar un entorno virtual, ejecuta el siguiente comando:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> env remove <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--name</span> nombre_del_entorno</span></code></pre></div>
<p>Asegúrate de reemplazar “nombre_del_entorno” con el nombre real del entorno que deseas eliminar.</p>
<p><strong>Paso 6: Cambiar entorno</strong></p>
<ol type="1">
<li><p>Abre Anaconda Navigator o el Anaconda Prompt (puedes encontrarlo en el menú de inicio de tu sistema operativo).</p></li>
<li><p>Una vez que hayas abierto el entorno de Anaconda, puedes verificar los entornos disponibles ejecutando el siguiente comando en el Anaconda Prompt:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> env list</span></code></pre></div>
<p>Esto te mostrará una lista de todos los entornos existentes.</p></li>
<li><p>Para cambiar al entorno de aprendizaje (llamado “learn” en este caso), utiliza el siguiente comando:</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> activate learn</span></code></pre></div>
<p>Esto activará el entorno de aprendizaje y te permitirá trabajar en él.</p></li>
<li><p>Una vez en el entorno de aprendizaje, es posible que notes que no tiene instalados otros paquetes, aparte de los paquetes oficiales que vienen con Python. Si deseas tener un entorno relativamente limpio, puedes seguir estos pasos:</p>
<ul>
<li><p>Ejecuta el siguiente comando para abrir el intérprete de Python:</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span></span></code></pre></div></li>
<li><p>Una vez dentro del intérprete de Python, ingresa el siguiente comando para importar el paquete “requests”:</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> requests</span></code></pre></div>
<p>Verás que se muestra un mensaje indicando que no se puede encontrar el paquete “requests”, lo cual es normal.</p></li>
<li><p>Para salir del intérprete de Python, simplemente ingresa el siguiente comando:</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">exit()</span></code></pre></div>
<p>Con esto, saldrás del intérprete de Python y volverás al Anaconda Prompt.</p></li>
</ul></li>
</ol>
<p>¡Y eso es todo! Ahora tienes los pasos detallados para configurar y administrar entornos virtuales en Conda.</p>
</section>
<section id="instalación-de-paquetes-y-bibliotecas-en-un-entorno-virtual" class="level1">
<h1>Instalación de paquetes y bibliotecas en un entorno virtual</h1>
<p>Cuando trabajas en proyectos de Python, es esencial tener acceso a las herramientas y funcionalidades adecuadas.</p>
<section id="uso-de-conda-install" class="level2">
<h2 class="anchored" data-anchor-id="uso-de-conda-install">Uso de conda install</h2>
<ol type="1">
<li><p>Asegúrate de tener tu entorno virtual activado. Si aún no lo has hecho, consulta el artículo anterior para aprender cómo activar tu entorno virtual específico.</p></li>
<li><p>Abre tu terminal o línea de comandos y ejecuta el siguiente comando para instalar un paquete desde el repositorio de Anaconda:</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> install nombre_del_paquete</span></code></pre></div>
<p>Asegúrate de reemplazar “nombre_del_paquete” con el nombre real del paquete que deseas instalar.</p></li>
<li><p>Conda buscará el paquete en el repositorio de Anaconda y gestionará las dependencias automáticamente. Sigue las instrucciones en la terminal para confirmar la instalación.</p></li>
</ol>
</section>
<section id="uso-de-pip-install" class="level2">
<h2 class="anchored" data-anchor-id="uso-de-pip-install">Uso de pip install</h2>
<ol type="1">
<li><p>Al igual que antes, asegúrate de tener tu entorno virtual activado.</p></li>
<li><p>Ejecuta el siguiente comando en tu terminal para instalar un paquete desde el Python Package Index (PyPI):</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb14-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install nombre_del_paquete</span></code></pre></div>
<p>Asegúrate de reemplazar “nombre_del_paquete” con el nombre real del paquete que deseas instalar.</p></li>
<li><p>Pip descargará el paquete desde PyPI y lo instalará en tu entorno virtual. Si el paquete tiene dependencias, pip también se encargará de resolverlas.</p></li>
</ol>
<p>Conda es especialmente útil para instalar paquetes que son parte del repositorio de Anaconda, mientras que pip es más adecuado para paquetes que se encuentran en PyPI. Ambas herramientas son poderosas y te permiten acceder a una amplia gama de paquetes y bibliotecas para tus proyectos.</p>
</section>
<section id="ver-información-del-paquete-de-entorno" class="level2">
<h2 class="anchored" data-anchor-id="ver-información-del-paquete-de-entorno">Ver información del paquete de entorno:</h2>
<p>Para ver todos los paquetes instalados en el entorno actual, puedes utilizar el siguiente comando:</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb15-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> list</span></code></pre></div>
<p>Al ejecutar este comando en el Anaconda Prompt, se mostrará una lista de todos los paquetes instalados en el entorno activo. Esto te permitirá conocer los paquetes y sus respectivas versiones que están disponibles en ese entorno.</p>
</section>
<section id="importar-y-exportar-entornos" class="level2">
<h2 class="anchored" data-anchor-id="importar-y-exportar-entornos">Importar y exportar entornos:</h2>
<p>Si deseas exportar la información del paquete del entorno actual, puedes utilizar el siguiente comando:</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb16-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> env export <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> environment.yaml</span></code></pre></div>
<p>Este comando guarda la información del paquete en un archivo YAML llamado “environment.yaml”. El archivo contendrá la lista de paquetes y sus versiones que están instalados en el entorno actual.</p>
<p>Esta funcionalidad es útil cuando necesitas recrear el mismo entorno virtual en otro lugar. Para crear un nuevo entorno virtual utilizando el archivo de configuración, puedes utilizar el siguiente comando:</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb17-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> env create <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-f</span> environment.yaml</span></code></pre></div>
<p>Este comando creará un nuevo entorno virtual utilizando el archivo de configuración “environment.yaml”. El nuevo entorno tendrá los mismos paquetes y versiones que el entorno original, lo que facilita la replicación del mismo entorno en diferentes sistemas.</p>
<p>Estos pasos son útiles para compartir y recrear entornos virtuales con la misma configuración, lo que asegura que todos los paquetes necesarios estén disponibles.</p>
</section>
</section>
<section id="coclusión" class="level1">
<h1>Coclusión</h1>
<p>En conclusión, el uso de Anaconda se presenta como una solución elegante y sencilla para abordar las desventajas de entorno de Python. A través de Anaconda, se puede gestionar de manera eficiente la instalación y actualización de paquetes, así como la creación y exportación de entornos virtuales. Sin embargo, es importante destacar que la implementación de estas funcionalidades no es mágica, requiere comprensión y familiaridad con los comandos y procesos asociados.</p>
<p>Además de la gestión de paquetes, Anaconda ofrece una amplia gama de herramientas y paquetes para el análisis de datos, lo cual constituye otro aspecto valioso de su funcionalidad. Sin embargo, en este contexto, nos hemos enfocado en aprender cómo utilizar Anaconda para cambiar el entorno de desarrollo de manera efectiva, lo cual ha representado una mejora significativa en comparación con el enfoque tradicional.</p>
<p><strong>¡Happy coding!</strong></p>
</section>
<section id="publicaciones-similares" class="level1">
<h1>Publicaciones Similares</h1>
<p>Si te interesó este artículo, te recomendamos que explores otros blogs y recursos relacionados que pueden ampliar tus conocimientos. Aquí te dejo algunas sugerencias:</p>
<ol type="1">
<li><p><a href="../2023-06-22-01-introduccion-a-python/index.qmd">Introducción</a></p></li>
<li><p>Variables, expresiones y statements</p></li>
<li><p>Objetos de Python</p></li>
<li><p>Ejecución condicional</p></li>
<li><p>Iteraciones</p></li>
<li><p>Funciones</p></li>
<li><p>Dataframes</p></li>
<li><p><a href="../2023-06-29-introduccion-a-la-visualizacion-de-datos-con-python/index.qmd">Introducción a la visualización de datos</a></p></li>
<li><p><a href="../2023-06-30-graficos-avanzados-con-python/index.qmd">Gráficos avanzados</a></p></li>
<li><p><a href="../2023-07-01-visualizacion-de-datos-en-tiempo-real-con-python/index.qmd">Visualización de datos en tiempo real</a></p></li>
<li><p>Visualización de datos en finanzas</p></li>
<li><p>Visualización de datos en microeconomía</p></li>
<li><p>Visualización de datos en macroeconomía</p></li>
<li><p>Visualización de datos en estadística</p></li>
<li><p>Visualización de datos en econometría</p></li>
<li><p>Mejores prácticas y consejos de visualización de datos</p></li>
<li><p>Predicción y métrica de performance</p></li>
<li><p>Métodos de machine learning para clasificación</p></li>
<li><p>Métodos de machine learning para regresión</p></li>
<li><p>Validación cruzada y composición del modelo</p></li>
</ol>
<p>Esperamos que encuentres estas publicaciones igualmente interesantes y útiles. ¡Disfruta de la lectura!</p>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{achalma2023,
  author = {Achalma, Edison},
  title = {Configuración de Entornos Virtuales Con {Anaconda}},
  date = {2023-06-20},
  url = {https://kapitan.net/informatica/python/2023-06-20-02-configurar-entorno-virtual-python-anaconda},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-achalma2023" class="csl-entry quarto-appendix-citeas">
Achalma, E. (2023, June 20). Configuración de entornos virtuales con
Anaconda. Retrieved from <a href="https://kapitan.net/informatica/python/2023-06-20-02-configurar-entorno-virtual-python-anaconda">https://kapitan.net/informatica/python/2023-06-20-02-configurar-entorno-virtual-python-anaconda</a>
</div></div></section></div> ]]></description>
  <category>Informática</category>
  <category>Tecnología</category>
  <category>Desarrollo de software</category>
  <guid>https://achalmaedison.netlify.app/informatica/python/2023-06-20-02-configurar-entorno-virtual-python-anaconda/</guid>
  <pubDate>Tue, 20 Jun 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Administracion de particiones y volumenes</title>
  <dc:creator>Edison Achalma</dc:creator>
  <link>https://achalmaedison.netlify.app/informatica/operating-system/2023-06-20-04-administracion-particiones-volumenes/</link>
  <description><![CDATA[ 




<p>¡Hola, lector! Te doy la más cordial bienvenida a esta nueva entrega de nuestra serie de introducción a Linux. En esta ocasión, vamos a sumergirnos en un tema fascinante y fundamental: las Particiones y Volúmenes en Linux.</p>
<p>Si ya has leído nuestros artículos anteriores sobre GNU/Linux, distribuciones y entornos de escritorio, estás listo para adentrarte en el apasionante mundo de la administración del sistema. Aquí descubrirás cómo estructurar y gestionar tus particiones, así como los volúmenes que albergan tus datos.</p>
<section id="esquema-de-particiones-mbr-y-gpt" class="level1">
<h1>Esquema de Particiones: MBR y GPT</h1>
<p>Dos de los esquemas más comunes son MBR (Master Boot Record) y GPT (GUID Partition Table). Estos esquemas determinan cómo se organiza y gestiona el espacio en tu disco duro.</p>
<p><strong>1. MBR (Master Boot Record):</strong> Es el esquema más antiguo y ampliamente utilizado. Permite dividir el disco en hasta 4 particiones primarias, o 3 particiones primarias y una extendida que puede contener múltiples particiones lógicas. Es compatible con la mayoría de los sistemas operativos, pero tiene limitaciones, como la capacidad máxima de 2 terabytes para cada partición.</p>
<p><strong>2. GPT (GUID Partition Table):</strong> Es el esquema más moderno y robusto. Puede manejar discos de mayor capacidad y admite hasta 128 particiones. Además, ofrece beneficios adicionales, como la redundancia de datos y la recuperación ante fallas. GPT es compatible con sistemas UEFI (Unified Extensible Firmware Interface) y es la elección recomendada para discos de más de 2 terabytes.</p>
</section>
<section id="cómo-se-genera-el-esquema-de-particiones-en-gnulinux" class="level1">
<h1>¿Cómo se genera el esquema de particiones en GNU/Linux?</h1>
<p>Este proceso es crucial para organizar y aprovechar al máximo el espacio de tu disco duro.</p>
<p>En GNU/Linux, puedes elegir el esquema de particiones cuando quemas la imagen ISO en un medio USB. Normalmente, se recomienda utilizar GPT si tu equipo es relativamente moderno. Puedes trabajar con MBR o GPT indistintamente, pero la elección adecuada marcará la diferencia.</p>
<p>Una de las aplicaciones más populares para crear medios de instalación es Rufus (disponible actualmente solo para Windows). Te permite seleccionar MBR o GPT, pero de forma predeterminada, la opción MBR está seleccionada. Algunas herramientas pueden no pedirte esta elección y preparar los medios con MBR por compatibilidad, así que es importante elegir la aplicación adecuada.</p>
<p>Independientemente del esquema utilizado, la mayoría de las distribuciones crean una tabla de particiones por defecto durante el asistente de instalación. Esta tabla suele incluir una partición primaria para instalar el sistema operativo y una partición lógica reservada para el área de intercambio.</p>
<p>En el caso de GNU/Linux, es común crear una partición primaria para el sistema operativo y una partición lógica para el área de intercambio o Swap. Sin embargo, si lo deseas, puedes personalizar la tabla de particiones según tus necesidades, creando particiones adicionales o redimensionando las existentes.</p>
<p>Si estás acostumbrado a Windows, probablemente estés familiarizado con la nomenclatura basada en letras para distinguir entre diferentes volúmenes (particiones y unidades físicas). Por ejemplo, la unidad C es donde se encuentra instalado el sistema operativo, y las unidades D, E, F, etc., representan otras particiones del mismo disco o de unidades externas.</p>
<p>En GNU/Linux, no existe esa nomenclatura. El sistema operativo se origina desde el directorio raíz, representado como “/”. Todos los demás directorios derivan del directorio raíz, independientemente de la partición en la que se encuentren.</p>
<p>Aquí tienes un ejemplo de cómo podrías representar tres particiones en una instalación típica, donde además de la partición del sistema operativo y la de intercambio, decides utilizar una partición separada para el directorio “/home”.</p>
</section>
<section id="administrador-de-volúmenes-lvm" class="level1">
<h1>Administrador de Volúmenes LVM</h1>
<p>El Administrador de Volúmenes LVM (Logical Volume Manager) es una herramienta que te permite crear volúmenes lógicos a partir de uno o varios discos físicos. ¿Por qué es tan genial? Pues porque te brinda flexibilidad y control sobre tus particiones, permitiéndote redimensionarlas en caliente, es decir, sin necesidad de reiniciar el sistema. ¡Es como la magia del almacenamiento en acción!</p>
<p>Imagínate que tienes una partición que se está quedando sin espacio, pero en cambio, tienes espacio libre en otra partición. Con LVM, puedes agrandar la partición necesitada y aprovechar ese espacio libre. ¡Adiós a los dolores de cabeza por falta de espacio!</p>
<p>¿Pero cómo funciona? Muy sencillo. LVM utiliza tres elementos principales: <strong>volúmenes físicos (PV)</strong>, <strong>grupos de volúmenes (VG)</strong> y <strong>volúmenes lógicos (LV)</strong>. Los volúmenes físicos son los discos duros o particiones que utilizaremos para crear nuestro espacio de almacenamiento. Los grupos de volúmenes actúan como contenedores que agrupan los volúmenes físicos, mientras que los volúmenes lógicos son las unidades de almacenamiento que se utilizan como particiones en tu sistema.</p>
<p>Con LVM, puedes crear, eliminar, redimensionar y administrar estos volúmenes lógicos de manera dinámica, adaptándolos según tus necesidades. Además, también puedes crear instantáneas de tus volúmenes lógicos para hacer copias de seguridad o probar cambios sin arriesgar tus datos. ¡Es como tener superpoderes de gestión de almacenamiento!</p>
</section>
<section id="cifrado-de-disco-luks" class="level1">
<h1>Cifrado de Disco LUKS</h1>
<p>El cifrado de disco LUKS (Linux Unified Key Setup) te permite encriptar tus particiones o discos completos en GNU/Linux. ¿Por qué es importante? Porque asegura la confidencialidad de tu información, evitando que terceros no autorizados accedan a tus datos en caso de pérdida o robo del equipo. Es como un fuerte escudo para tus archivos más preciados.</p>
<p>LUKS utiliza algoritmos criptográficos de alta seguridad, como AES (Advanced Encryption Standard), para proteger tus datos. Puedes elegir una contraseña fuerte o incluso utilizar una clave en un dispositivo USB para desbloquear tus discos en el arranque. ¡Tú tienes el control total de tus claves!</p>
<p>Una vez que hayas configurado el cifrado LUKS en tu disco, cada vez que inicies tu sistema, se te pedirá la contraseña o la clave del USB para desbloquear el disco. Después de desbloquearlo, podrás utilizar tu sistema de forma normal, pero con la tranquilidad de saber que tus datos están protegidos.</p>
<p>Además, LUKS también te brinda la posibilidad de crear contenedores encriptados, donde puedes almacenar archivos y carpetas sensibles. Estos contenedores se comportan como archivos normales, pero están protegidos por una capa adicional de seguridad. Puedes abrirlos y acceder a su contenido solo con la contraseña correcta. ¡Es como tener una caja fuerte virtual en tu sistema!</p>
<p>Es importante tener en cuenta que el cifrado de disco LUKS puede afectar ligeramente el rendimiento del sistema, ya que cada vez que accedas a tus datos, se realizará la desencriptación en tiempo real. Sin embargo, esta pequeña pérdida de velocidad vale la pena para garantizar la seguridad de tus archivos.</p>
<p>Ahora que conoces los beneficios del cifrado de disco LUKS, no dudes en explorar esta poderosa herramienta y mantener tus datos a salvo de miradas indiscretas.</p>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{achalma2023,
  author = {Achalma, Edison},
  title = {Administracion de Particiones y Volumenes},
  date = {2023-06-20},
  url = {https://kapitan.net/informatica/operating-system/2023-06-20-04-administracion-particiones-volumenes},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-achalma2023" class="csl-entry quarto-appendix-citeas">
Achalma, E. (2023, June 20). Administracion de particiones y volumenes.
Retrieved from <a href="https://kapitan.net/informatica/operating-system/2023-06-20-04-administracion-particiones-volumenes">https://kapitan.net/informatica/operating-system/2023-06-20-04-administracion-particiones-volumenes</a>
</div></div></section></div> ]]></description>
  <category>Informática</category>
  <category>Tecnología</category>
  <category>Sistemas Operativos</category>
  <category>Linux</category>
  <category>Administración del Sistema</category>
  <guid>https://achalmaedison.netlify.app/informatica/operating-system/2023-06-20-04-administracion-particiones-volumenes/</guid>
  <pubDate>Tue, 20 Jun 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Instalación de Anaconda en Ubuntu Linux</title>
  <dc:creator>Edison Achalma</dc:creator>
  <link>https://achalmaedison.netlify.app/informatica/python/2023-06-19-01-instalacion-de-anaconda/</link>
  <description><![CDATA[ 




<section id="introducción" class="level1">
<h1>Introducción</h1>
<p>La instalación de Anaconda en Ubuntu Linux es un paso crucial para aquellos que desean aprovechar al máximo el desarrollo en Python en este sistema operativo. Anaconda, una plataforma de gestión de paquetes y entornos virtuales, ofrece una amplia gama de herramientas y bibliotecas que facilitan el trabajo con Python, así como con otros lenguajes de programación populares. Al instalar Anaconda en Ubuntu Linux, los desarrolladores obtienen una solución integral que simplifica el proceso de configuración y administración de su entorno de desarrollo.</p>
<p>La importancia de la instalación de Anaconda en Ubuntu Linux radica en su capacidad para proporcionar un flujo de trabajo fluido y eficiente. Al ofrecer una amplia selección de paquetes precompilados, Anaconda elimina la necesidad de buscar e instalar manualmente cada biblioteca requerida. Esto ahorra tiempo y evita posibles conflictos de dependencia, permitiendo a los desarrolladores centrarse en la programación en lugar de la configuración del entorno.</p>
<p>Además de su conveniencia, Anaconda también ofrece beneficios significativos en términos de gestión de entornos virtuales. Con la ayuda de la herramienta “conda”, los desarrolladores pueden crear y administrar fácilmente entornos aislados para proyectos específicos. Esto permite mantener diferentes versiones de paquetes y bibliotecas para cada proyecto, evitando conflictos y facilitando la replicación del entorno de desarrollo en diferentes sistemas.</p>
<p>¡Sumérgete en el mundo de Anaconda y descubre cómo simplificar y mejorar tu experiencia de desarrollo en Python en Ubuntu Linux!</p>
</section>
<section id="qué-es-anaconda" class="level1">
<h1>¿Qué es Anaconda?</h1>
<p>Anaconda es una plataforma de gestión de paquetes y entornos virtuales diseñada para facilitar el desarrollo en Python y otros lenguajes de programación populares. Imagina que tienes una caja de herramientas repleta de todo lo que necesitas para construir aplicaciones, analizar datos o desarrollar proyectos de aprendizaje automático. Esa es Anaconda: una caja de herramientas poderosa y completa que te brinda todo lo que necesitas para trabajar con Python de manera eficiente.</p>
<p>Una de las principales ventajas de Anaconda es su capacidad para gestionar paquetes. En lugar de buscar y descargar manualmente cada biblioteca que necesitas, Anaconda te ofrece una amplia selección de paquetes precompilados y listos para usar. Esto significa que no tienes que preocuparte por las dependencias o por perder tiempo en configuraciones complicadas. Con Anaconda, puedes comenzar a trabajar en tu proyecto de inmediato.</p>
<p>Otra gran ventaja de Anaconda es su capacidad para crear entornos virtuales. ¿Qué significa esto? Básicamente, puedes aislar tus proyectos en entornos separados, cada uno con su propia configuración de paquetes y versiones. Esto es especialmente útil cuando trabajas en varios proyectos al mismo tiempo o cuando necesitas mantener diferentes versiones de bibliotecas para distintas aplicaciones. Anaconda hace que la gestión de entornos sea sencilla y te permite alternar entre ellos con facilidad.</p>
</section>
<section id="pasos-para-la-instalación-de-anaconda-en-ubuntu-linux" class="level1">
<h1>Pasos para la instalación de Anaconda en Ubuntu Linux</h1>
<section id="descargar-el-instalador-de-anaconda" class="level2">
<h2 class="anchored" data-anchor-id="descargar-el-instalador-de-anaconda">Descargar el instalador de Anaconda</h2>
<p><strong>Paso 1:</strong> Accede al sitio web oficial de Anaconda. Puedes hacerlo abriendo tu navegador web favorito y dirigiéndote a <a href="https://www.anaconda.com/">Anaconda.com</a>. Una vez allí, busca la sección de descargas.</p>
<p><strong>Paso 2:</strong> En la sección de descargas, encontrarás diferentes opciones de Anaconda según tu sistema operativo. Como estamos trabajando en Ubuntu Linux, asegúrate de seleccionar la versión adecuada para Linux.</p>
<p><strong>Paso 3:</strong> Una vez que hayas seleccionado la versión de Linux, verás dos opciones: Anaconda Individual Edition y Anaconda Enterprise. Para la mayoría de los casos, Anaconda Individual Edition es la opción recomendada, ya que es una versión gratuita y completa de Anaconda. Haz clic en el botón de descarga correspondiente a la edición que deseas instalar.</p>
<p><strong>Paso 4:</strong> La descarga comenzará y, dependiendo de la velocidad de tu conexión a Internet, podría llevar algunos minutos. Asegúrate de esperar hasta que la descarga se complete antes de pasar al siguiente paso.</p>
<p>Ahora que has descargado el instalador de Anaconda en tu sistema Ubuntu Linux, es hora de abrir la terminal y ejecutar algunos comandos para continuar con el proceso de instalación. ¡No te preocupes, te guiaré paso a paso!</p>
<p><strong>Paso 5:</strong> Abre la terminal. Puedes hacerlo de diferentes maneras, pero una forma común es presionar las teclas Ctrl + Alt + T al mismo tiempo. Esto abrirá una nueva ventana de terminal en tu pantalla.</p>
<p><strong>Paso 6:</strong> Una vez que tengas la terminal abierta, es importante asegurarte de que estás ubicado en el directorio correcto. Para hacerlo, ejecuta el comando “pwd” y presiona Enter. Esto te mostrará la ruta actual en la que te encuentras. Asegúrate de estar en el lugar adecuado antes de continuar.</p>
<p><strong>Paso 7:</strong> Ahora, necesitamos navegar a la ubicación donde se encuentra el instalador de Anaconda que descargaste. Por lo general, se guarda en la carpeta “Downloads” (Descargas). Para acceder a esta carpeta, ejecuta el siguiente comando:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> Downloads/</span></code></pre></div>
<p>Presiona Enter después de escribir el comando y verás que la ruta de la terminal cambia al directorio “Downloads”.</p>
<p><strong>Paso 8:</strong> ¡Estamos casi listos para ejecutar el instalador de Anaconda! Ahora, debes ejecutar el archivo de instalación. Asegúrate de que el nombre del archivo coincida con el que descargaste. Para ejecutarlo, utiliza el siguiente comando:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bash</span> nombre-del-archivo.sh</span></code></pre></div>
<p>Reemplaza “nombre-del-archivo” con el nombre exacto del archivo de instalación que descargaste. Por ejemplo, si el archivo se llama “Anaconda3-2021.05-Linux-x86_64.sh”, el comando sería:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bash</span> Anaconda3-2021.05-Linux-x86_64.sh</span></code></pre></div>
<p>Presiona Enter y comenzará el proceso de instalación de Anaconda. Sigue las instrucciones que aparecerán en la terminal y asegúrate de leer y aceptar los términos de licencia.</p>
<p><strong>Paso 9:</strong> ¡Genial! Ahora que has ejecutado el instalador de Anaconda en Ubuntu Linux, solo te queda seguir las instrucciones de instalación que aparecerán en la terminal. No te preocupes, te guiaré a través de este paso.</p>
<p>Después de ejecutar el comando para iniciar la instalación, verás que aparecerá una serie de instrucciones en la terminal. Lee cuidadosamente cada paso y asegúrate de seguirlos correctamente.</p>
<p>Por lo general, las instrucciones te pedirán que revises y aceptes los términos de licencia. Para hacerlo, simplemente lee los términos y condiciones que se muestran en la terminal y, cuando se te solicite, presiona Enter para avanzar y aceptar los términos.</p>
<p>A continuación, se te pedirá que especifiques la ubicación de la instalación de Anaconda. Por defecto, suele ser en tu directorio de inicio, pero puedes elegir una ubicación diferente si lo deseas. Si no estás seguro, te recomendaría que aceptes la ubicación predeterminada presionando Enter.</p>
<p>Luego, la instalación te preguntará si deseas agregar Anaconda a tu variable de entorno PATH. Esto es útil para que puedas acceder a los comandos de Anaconda desde cualquier ubicación en tu sistema. Te sugeriría que respondas “yes” (sí) y presiones Enter.</p>
<p>Cuando la carpeta de anaconda ya existe, actualizamos programas existente.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bash</span> Anaconda3-2021.11-Linux-x86_64.sh <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-u</span> </span></code></pre></div>
<p>Después de eso, la instalación continuará y verás una barra de progreso que indica el avance del proceso. Puede llevar algún tiempo, así que ten paciencia.</p>
<p>Una vez que la instalación se complete con éxito, verás un mensaje indicando que Anaconda se ha instalado correctamente. ¡Felicidades! Has instalado Anaconda en tu sistema Ubuntu Linux.</p>
<p>Ahora puedes cerrar la terminal y comenzar a disfrutar de las ventajas de utilizar Anaconda en tu sistema. Recuerda que Anaconda te ofrece un entorno de gestión de paquetes y entornos virtuales que te facilitará el trabajo con Python y otras herramientas de ciencia de datos.</p>
<p><strong>Paso 10:</strong> Una vez que hayas instalado Anaconda en tu sistema Ubuntu Linux, es importante añadirlo al PATH del sistema para que puedas acceder a los comandos de Anaconda desde cualquier ubicación en tu sistema. Te guiaré a través de este paso.</p>
<ol type="1">
<li><p>Abre la terminal en tu sistema Ubuntu Linux. Puedes hacerlo buscando “Terminal” en el menú de aplicaciones o usando el atajo de teclado Ctrl+Alt+T.</p></li>
<li><p>En la terminal, escribe el siguiente comando para abrir el archivo de configuración de inicio de sesión:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nano</span> ~/.bashrc</span></code></pre></div></li>
<li><p>Esto abrirá el archivo <code>.bashrc</code> en el editor de texto <code>nano</code>. Ahora, desplázate hasta el final del archivo.</p></li>
<li><p>En la última línea del archivo, añade el siguiente comando para agregar Anaconda al PATH:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PATH</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/ruta/donde/instalaste/anaconda/bin:</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PATH</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span></code></pre></div>
<p>Recuerda reemplazar “/ruta/donde/instalaste/anaconda” con la ubicación real donde instalaste Anaconda. Si elegiste la ubicación predeterminada, el comando será:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PATH</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$HOME</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/anaconda/bin:</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PATH</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span></code></pre></div></li>
<li><p>Después de añadir el comando, guarda los cambios en el archivo <code>~/.bashrc</code>. En <code>nano</code>, puedes hacerlo presionando Ctrl+O, luego presiona Enter para confirmar y finalmente presiona Ctrl+X para salir del editor <code>nano</code>.</p></li>
<li><p>Ahora, para que los cambios tengan efecto, actualiza el archivo de configuración de inicio de sesión con el siguiente comando:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span> ~/.bashrc</span></code></pre></div></li>
</ol>
<p>¡Y eso es todo! Has añadido correctamente Anaconda al PATH del sistema en Ubuntu Linux. Ahora podrás acceder a los comandos de Anaconda desde cualquier ubicación en tu sistema.</p>
<p><strong>Algunos problemas:</strong> A veces, durante la instalación de Anaconda, puede ocurrir que no se pueda responder con “yes” al prompt de inicialización de Anaconda en el archivo <code>.bashrc</code>. Aquí te proporcionaré una solución detallada para abordar este problema:</p>
<ol type="1">
<li><p>Después de que la instalación de Anaconda se complete y se muestre el prompt para inicializar Anaconda en el archivo <code>.bashrc</code>, si no puedes responder con “yes” y el proceso se cierra, no te preocupes.</p></li>
<li><p>Abre la terminal en tu sistema Ubuntu Linux. Puedes hacerlo buscando “Terminal” en el menú de aplicaciones o usando el atajo de teclado Ctrl+Alt+T.</p></li>
<li><p>En la terminal, ejecuta el siguiente comando para abrir el archivo <code>.bashrc</code> en un editor de texto:</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> gedit ~/.bashrc</span></code></pre></div>
<p>Esto abrirá el archivo <code>.bashrc</code> con privilegios de administrador para poder editarlo.</p></li>
<li><p>Desplázate hasta el final del archivo <code>.bashrc</code> y agrega el siguiente bloque de código:</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># &gt;&gt;&gt; conda initialize &gt;&gt;&gt;</span></span>
<span id="cb10-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">!!</span> Contents within this block are managed by <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'conda init'</span> !!</span>
<span id="cb10-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">__conda_setup</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/achalmaubuntu/anaconda3/bin/conda'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'shell.bash'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'hook'</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> /dev/null<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb10-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">[</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$?</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-eq</span> 0 <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">]</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb10-5">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">eval</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$__conda_setup</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb10-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span></span>
<span id="cb10-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">[</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-f</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/achalmaubuntu/anaconda3/etc/profile.d/conda.sh"</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">]</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb10-8">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">.</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/achalmaubuntu/anaconda3/etc/profile.d/conda.sh"</span></span>
<span id="cb10-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span></span>
<span id="cb10-10">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PATH</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/achalmaubuntu/anaconda3/bin:</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PATH</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb10-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb10-12"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb10-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">unset</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">__conda_setup</span></span>
<span id="cb10-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># &lt;&lt;&lt; conda initialize &lt;&lt;&lt;</span></span></code></pre></div>
<p>Recuerda cambiar el achalmaubuntu con su usuario</p></li>
<li><p>Guarda los cambios en el archivo <code>.bashrc</code>.</p></li>
<li><p>Luego, en la terminal, ejecuta el siguiente comando para actualizar las variables de entorno con los cambios realizados en el archivo <code>.bashrc</code>:</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span> ~/.bashrc</span></code></pre></div></li>
</ol>
<p>Recuerda reiniciar la terminal o abrir una nueva ventana de terminal para que los cambios surtan efecto.</p>
<p>¡Y eso es todo! Has solucionado el problema de inicialización de Anaconda en el archivo <code>.bashrc</code> y ahora puedes utilizar Anaconda y sus comandos sin problemas en tu sistema Ubuntu Linux.</p>
</section>
</section>
<section id="verificación-de-la-instalación-de-anaconda" class="level1">
<h1>Verificación de la instalación de Anaconda</h1>
<p>Una vez que hayas completado la instalación de Anaconda en tu sistema Ubuntu Linux, es importante verificar que todo haya sido instalado correctamente. Aquí te mostraré cómo comprobarlo y también cómo verificar la versión de Anaconda y los paquetes instalados.</p>
<p><strong>Comprobar la instalación de Anaconda:</strong></p>
<ol type="1">
<li><p>Abre la terminal en tu sistema Ubuntu Linux.</p></li>
<li><p>En la terminal, ingresa el siguiente comando:</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--version</span></span></code></pre></div>
<p>Esto mostrará la versión de Anaconda instalada en tu sistema. Si se muestra la versión correctamente, significa que Anaconda está instalado correctamente.</p></li>
</ol>
<p><strong>Verificar la versión de Anaconda:</strong></p>
<ol type="1">
<li><p>En la terminal, ingresa el siguiente comando:</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> list anaconda$</span></code></pre></div>
<p>Esto mostrará una lista de los paquetes instalados con el nombre “anaconda” en su versión. Si se muestra la lista de paquetes correctamente, significa que la instalación de Anaconda incluyendo los paquetes se ha realizado correctamente.</p></li>
<li><p>Para verificar la versión de un paquete específico, puedes ingresar el siguiente comando en la terminal, reemplazando <code>&lt;nombre_paquete&gt;</code> con el nombre del paquete que deseas verificar:</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb14-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>nombre_paquete<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<p>Esto mostrará la versión del paquete específico instalado en tu sistema.</p></li>
</ol>
<p>¡Listo! Ahora puedes asegurarte de que Anaconda esté correctamente instalado y verificar las versiones de Anaconda y los paquetes instalados en tu sistema Ubuntu Linux. Esto te ayudará a garantizar un funcionamiento adecuado de Anaconda y sus herramientas para el desarrollo de proyectos.</p>
</section>
<section id="actualización-de-anaconda-en-ubuntu-linux" class="level1">
<h1>Actualización de Anaconda en Ubuntu Linux</h1>
<p>Mantener tu instalación de Anaconda actualizada es crucial para aprovechar las últimas mejoras, características y correcciones de errores. Afortunadamente, actualizar Anaconda en Ubuntu Linux es un proceso sencillo. A continuación, te mostraré los pasos para actualizar Anaconda a la última versión utilizando los comandos de actualización de Conda y paquetes.</p>
<p><strong>Pasos para actualizar Anaconda:</strong></p>
<ol type="1">
<li><p>Abre la terminal en tu sistema Ubuntu Linux.</p></li>
<li><p>En la terminal, ingresa el siguiente comando para actualizar Conda, el administrador de paquetes de Anaconda:</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb15-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> update conda</span></code></pre></div>
<p>Este comando actualizará Conda a la última versión disponible.</p></li>
<li><p>A continuación, puedes utilizar el siguiente comando para actualizar todos los paquetes instalados en tu entorno de Anaconda:</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb16-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> update <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--all</span></span></code></pre></div>
<p>Este comando buscará actualizaciones para todos los paquetes instalados y los actualizará a las últimas versiones disponibles.</p></li>
<li><p>Si deseas actualizar un paquete específico, puedes utilizar el siguiente comando, reemplazando <code>&lt;nombre_paquete&gt;</code> con el nombre del paquete que deseas actualizar:</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb17-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> update <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>nombre_paquete<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<p>Esto actualizará el paquete especificado a la última versión disponible.</p></li>
</ol>
<p>Recuerda que antes de realizar la actualización, es recomendable crear un entorno virtual y respaldar tus proyectos para evitar cualquier conflicto o pérdida de datos.</p>
<p>¡Y eso es todo! Con estos pasos, podrás mantener tu instalación de Anaconda actualizada y disfrutar de las últimas mejoras en Ubuntu Linux. Asegúrate de realizar actualizaciones periódicas para aprovechar al máximo las capacidades de Anaconda y sus paquetes.</p>
</section>
<section id="desinstalación-de-anaconda-en-ubuntu-linux" class="level1">
<h1>Desinstalación de Anaconda en Ubuntu Linux</h1>
<p>Si en algún momento deseas eliminar completamente Anaconda de tu sistema Ubuntu Linux, ya sea para realizar una nueva instalación o por cualquier otro motivo, puedes seguir estos pasos para desinstalarlo por completo.</p>
<p><strong>Proceso para eliminar completamente Anaconda:</strong></p>
<ol type="1">
<li><p>Abre la terminal en tu sistema Ubuntu Linux.</p></li>
<li><p>En la terminal, ingresa el siguiente comando para desactivar cualquier configuración de Anaconda que esté activa en tu entorno actual:</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb18-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> deactivate</span></code></pre></div>
<p>Esto asegurará que no haya entornos virtuales activos relacionados con Anaconda.</p></li>
<li><p>A continuación, puedes utilizar el siguiente comando para desinstalar Anaconda y eliminar todos los archivos relacionados:</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb19-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">anaconda-clean</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--yes</span></span></code></pre></div>
<p>Este comando eliminará Anaconda de tu sistema y eliminará los archivos y directorios asociados.</p></li>
<li><p>Una vez completado el proceso de desinstalación, puedes verificar que Anaconda se haya eliminado por completo. Puedes utilizar el siguiente comando para verificar si el directorio de Anaconda ya no existe:</p>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb20-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ls</span> ~/anaconda3</span></code></pre></div>
<p>Si el directorio no se encuentra, significa que Anaconda ha sido eliminado correctamente.</p></li>
</ol>
<p>Recuerda que este proceso eliminará permanentemente Anaconda de tu sistema, incluyendo todos los paquetes y entornos virtuales asociados. Asegúrate de realizar una copia de seguridad de tus proyectos y datos importantes antes de proceder con la desinstalación.</p>
<p>¡Y eso es todo! Siguiendo estos pasos, podrás eliminar completamente Anaconda de tu sistema Ubuntu Linux. Si en el futuro decides volver a instalarlo, podrás seguir los pasos que hemos cubierto anteriormente en este blog.</p>
</section>
<section id="comandos-básicos" class="level1">
<h1>Comandos básicos</h1>
<ol type="1">
<li><p><code>conda deactivate</code>: Este comando se utiliza para desactivar el entorno activo de Conda. Cuando trabajas con entornos virtuales en Anaconda, puedes utilizar este comando para volver al entorno base o desactivar cualquier entorno virtual activo.</p></li>
<li><p><code>conda activate</code>: Con este comando, puedes activar un entorno virtual específico en Anaconda. Puedes crear entornos virtuales personalizados con diferentes versiones de Python y paquetes instalados. Al utilizar este comando, podrás activar uno de esos entornos y trabajar en él.</p></li>
<li><p><code>jupyter notebook</code>: Este comando se utiliza para abrir el entorno de Jupyter Notebook. Jupyter Notebook es una aplicación web que te permite crear y compartir documentos interactivos que contienen código, visualizaciones y texto explicativo. Al ejecutar este comando, se abrirá una nueva pestaña del navegador con el entorno de Jupyter Notebook.</p></li>
<li><p><code>spyder</code>: Al ejecutar este comando, se abrirá el entorno de desarrollo integrado (IDE) de Spyder. Spyder es un entorno de desarrollo muy utilizado en Python que ofrece características como edición de código, depuración y ejecución de programas.</p></li>
<li><p><code>python</code>: Al ejecutar este comando, se iniciará el intérprete de Python en la línea de comandos. Podrás ejecutar comandos y scripts de Python directamente en la terminal.</p></li>
<li><p><code>anaconda-navigator</code>: Con este comando, se abrirá la interfaz gráfica de Anaconda Navigator. Anaconda Navigator es una aplicación que te permite administrar tus entornos virtuales, instalar paquetes y lanzar aplicaciones como Jupyter Notebook y Spyder de manera visual.</p></li>
<li><p><code>conda info</code>: Este comando proporciona información detallada sobre la instalación de Conda, como la versión de Conda, la ubicación de los archivos y la configuración actual.</p></li>
<li><p><code>conda update conda</code>: Utilizando este comando, puedes actualizar la versión de Conda en tu sistema. Conda es el administrador de paquetes y entornos virtuales de Anaconda, y mantenerlo actualizado te permitirá acceder a las últimas funciones y mejoras.</p></li>
<li><p><code>rm -rf ~/anaconda3</code>: Este comando se utiliza para desinstalar completamente Anaconda de tu sistema. Ten en cuenta que este comando eliminará permanentemente Anaconda y todos los archivos relacionados, incluyendo tus entornos virtuales y paquetes instalados. Asegúrate de hacer una copia de seguridad de tus datos importantes antes de ejecutar este comando.</p></li>
</ol>
<p>Si tienes alguna pregunta o necesitas más ayuda, no dudes en dejar un comentario.</p>
<p><strong>¡Hasta la próxima!</strong></p>
</section>
<section id="publicaciones-similares" class="level1">
<h1>Publicaciones Similares</h1>
<p>Si te interesó este artículo, te recomendamos que explores otros blogs y recursos relacionados que pueden ampliar tus conocimientos. Aquí te dejo algunas sugerencias:</p>
<ol type="1">
<li><p><a href="../2023-06-22-01-introduccion-a-python/index.qmd">Introducción</a></p></li>
<li><p>Variables, expresiones y statements</p></li>
<li><p>Objetos de Python</p></li>
<li><p>Ejecución condicional</p></li>
<li><p>Iteraciones</p></li>
<li><p>Funciones</p></li>
<li><p>Dataframes</p></li>
<li><p><a href="../2023-06-29-introduccion-a-la-visualizacion-de-datos-con-python/index.qmd">Introducción a la visualización de datos</a></p></li>
<li><p><a href="../../../informatica/python/2023-06-30-graficos-avanzados-con-python/index.html">Gráficos avanzados</a></p></li>
<li><p><a href="../2023-07-01-visualizacion-de-datos-en-tiempo-real-con-python/index.qmd">Visualización de datos en tiempo real</a></p></li>
<li><p>Visualización de datos en finanzas</p></li>
<li><p>Visualización de datos en microeconomía</p></li>
<li><p>Visualización de datos en macroeconomía</p></li>
<li><p>Visualización de datos en estadística</p></li>
<li><p>Visualización de datos en econometría</p></li>
<li><p>Mejores prácticas y consejos de visualización de datos</p></li>
<li><p>Predicción y métrica de performance</p></li>
<li><p>Métodos de machine learning para clasificación</p></li>
<li><p>Métodos de machine learning para regresión</p></li>
<li><p>Validación cruzada y composición del modelo</p></li>
</ol>
<p>Esperamos que encuentres estas publicaciones igualmente interesantes y útiles. ¡Disfruta de la lectura!</p>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{achalma2023,
  author = {Achalma, Edison},
  title = {Instalación de {Anaconda} En {Ubuntu} {Linux}},
  date = {2023-06-19},
  url = {https://kapitan.net/informatica/python/2023-06-19-01-instalacion-de-anaconda},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-achalma2023" class="csl-entry quarto-appendix-citeas">
Achalma, E. (2023, June 19). Instalación de Anaconda en Ubuntu Linux.
Retrieved from <a href="https://kapitan.net/informatica/python/2023-06-19-01-instalacion-de-anaconda">https://kapitan.net/informatica/python/2023-06-19-01-instalacion-de-anaconda</a>
</div></div></section></div> ]]></description>
  <category>Informática</category>
  <category>Tecnología</category>
  <category>Desarrollo de software</category>
  <guid>https://achalmaedison.netlify.app/informatica/python/2023-06-19-01-instalacion-de-anaconda/</guid>
  <pubDate>Mon, 19 Jun 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Descarga, Instalación y Más de GNU/Linux</title>
  <dc:creator>Edison Achalma</dc:creator>
  <link>https://achalmaedison.netlify.app/informatica/operating-system/2023-06-19-03-instalacion-linux/</link>
  <description><![CDATA[ 




<p>¡Hola, lector!</p>
<p>Bienvenido a esta emocionante serie de introducción a Linux. Si estás dando tus primeros pasos en este fascinante mundo, estás en el lugar adecuado. Aquí, desgranaremos algunos aspectos fundamentales que debes conocer, desde las distribuciones y entornos gráficos hasta las aplicaciones y la administración del sistema.</p>
<p>En esta parte práctica, nos enfocaremos en los pasos necesarios para descargar una distribución GNU/Linux y comenzar a probarla en tus propios equipos. Te guiaré a través de diferentes etapas, desde la selección del hardware hasta la descarga de la imagen ISO y la preparación de los medios de instalación. Además, exploraremos diversas opciones para probar o instalar Linux.</p>
<p>Si estás listo para embarcarte en esta emocionante aventura, acompáñame en este recorrido. ¡Juntos descubriremos el poder y la versatilidad de GNU/Linux!</p>
<section id="seleccionar-el-hardware" class="level1">
<h1>Seleccionar el Hardware</h1>
<p>Antes de sumergirnos en la descarga e instalación de esta emocionante plataforma, es importante seleccionar el hardware adecuado.</p>
<p>El hardware es el conjunto de componentes físicos de tu equipo, como el procesador, la memoria RAM, el disco duro y otros dispositivos. Aunque Linux es conocido por su capacidad para adaptarse a diferentes tipos de hardware, es recomendable tener en cuenta algunas consideraciones.</p>
<p>En primer lugar, debes verificar los requisitos mínimos del sistema de la distribución Linux que deseas instalar. Estos requisitos suelen estar disponibles en el sitio web oficial de la distribución. Asegúrate de que tu hardware cumpla con esos requisitos para disfrutar de un rendimiento óptimo.</p>
<p>Además, es importante tener en cuenta el propósito de tu instalación de Linux. ¿Es para un equipo de escritorio, un servidor o una máquina virtual? Dependiendo de tus necesidades, es posible que debas considerar diferentes características de hardware, como la capacidad de almacenamiento, la potencia de procesamiento y la compatibilidad de los controladores.</p>
<p>Recuerda que Linux es conocido por su compatibilidad con una amplia gama de hardware, incluidos equipos más antiguos. Así que, incluso si no tienes lo último en tecnología, ¡no te preocupes! Es probable que Linux funcione sin problemas en tu equipo.</p>
<p>Antes de pasar al siguiente paso, te recomendaría hacer una lista de las especificaciones de tu hardware actual para compararlas con los requisitos mínimos del sistema de la distribución Linux que elijas. Esto te ayudará a tomar una decisión informada y asegurarte de que todo funcione sin problemas.</p>
</section>
<section id="descargar-imagen-iso-de-tu-distribución-preferida" class="level1">
<h1>Descargar Imagen ISO de tu Distribución Preferida</h1>
<p>Ahora que hemos seleccionado el hardware adecuado, es hora de descargar la imagen ISO de la distribución Linux que más te llame la atención. La imagen ISO es un archivo que contiene todos los datos necesarios para instalar el sistema operativo en tu equipo.</p>
<p>El primer paso es visitar el sitio web oficial de la distribución Linux que deseas probar. Allí encontrarás una variedad de opciones para descargar la imagen ISO. ¡Pero cuidado! Asegúrate de elegir la versión correcta de acuerdo con tu arquitectura de hardware (generalmente 32 bits o 64 bits) y tus preferencias (como el entorno gráfico).</p>
<p>A continuación de dejo los enlaces a las paginas de descarga de las ultimas versiones de algunas de las distribuciones más populares:</p>
<ul>
<li><p><a href="https://ubuntu.com/download/desktop">Descarga Ubuntu 22.04 LTS</a></p></li>
<li><p><a href="https://www.linuxmint.com/download.php">Descarga Linux Mint 21</a></p></li>
<li><p><a href="https://www.debian.org/download">Descarga Debian 11 Bullseye</a></p></li>
<li><p><a href="https://get.opensuse.org/leap/15.4/">Descarga openSUSE Leap 15.4</a></p></li>
<li><p><a href="https://getfedora.org/es/workstation/download/">Descargar Fedora 36 Workstation</a></p></li>
</ul>
<p>Una vez que hayas seleccionado la versión adecuada, simplemente haz clic en el enlace de descarga correspondiente. Dependiendo del tamaño del archivo y la velocidad de tu conexión a Internet, la descarga puede llevar algunos minutos. Aprovecha este tiempo para preparar una buena taza de café o té, y relájate mientras se completa la descarga.</p>
<p>Una vez que la descarga haya finalizado, ¡felicitaciones! Ahora tienes la imagen ISO de tu distribución Linux preferida lista para usar. Pero antes de seguir adelante, te recomendaría verificar la integridad del archivo. Algunos sitios web proporcionan sumas de verificación o firmas digitales que te permiten asegurarte de que el archivo se descargó correctamente y no se haya corrompido en el proceso.</p>
<p>Si todo está en orden, estás listo para el siguiente paso emocionante: preparar los medios de instalación. En nuestro próximo fragmento, exploraremos cómo convertir la imagen ISO en un medio de instalación, ya sea una unidad USB o un DVD.</p>
</section>
<section id="preparar-los-medios-de-instalación" class="level1">
<h1>Preparar los Medios de Instalación</h1>
<p>¡Excelente, explorador de Linux! Ahora que tienes la imagen ISO de tu distribución preferida, es hora de convertirla en un medio de instalación. Esto te permitirá instalar Linux en tu equipo y comenzar a explorar sus maravillas.</p>
<p>La forma más común de preparar los medios de instalación es crear un dispositivo USB de arranque. Para hacer esto, necesitarás una unidad USB vacía con capacidad suficiente para albergar la imagen ISO. Asegúrate de hacer una copia de seguridad de cualquier dato importante que haya en la unidad USB, ya que se eliminará durante el proceso.</p>
<p>Para crear el dispositivo USB de arranque, existen varias herramientas disponibles. Una de las más populares y fáciles de usar es “Etcher”. Puedes descargarlo desde su sitio web oficial e instalarlo en tu sistema operativo actual.</p>
<p>Una vez que hayas instalado Etcher, ábrelo y verás una interfaz sencilla y amigable. En primer lugar, selecciona la imagen ISO que descargaste haciendo clic en el botón “Seleccionar imagen”. Luego, elige la unidad USB en la que deseas crear el dispositivo de arranque.</p>
<p>Una vez que hayas hecho todas las selecciones, haz clic en el botón “Flash!” y deja que Etcher haga su magia. Ten en cuenta que este proceso puede tardar unos minutos, así que ten paciencia.</p>
<p>Una vez completado el proceso, tendrás tu dispositivo USB de arranque listo para usar. Ahora estás un paso más cerca de sumergirte en el mundo de Linux.</p>
<section id="opciones-para-probar-o-instalar-linux" class="level2">
<h2 class="anchored" data-anchor-id="opciones-para-probar-o-instalar-linux">Opciones para Probar o Instalar Linux</h2>
<p>¡Es hora de decidir cómo quieres probar o instalar Linux en tu equipo, intrépido lector! Afortunadamente, tienes varias opciones disponibles que se adaptan a tus necesidades y preferencias.</p>
<p>La primera opción es probar Linux sin realizar una instalación completa en tu equipo. Esto se conoce como <strong>“modo Live”.</strong> Es ideal si quieres explorar Linux sin hacer cambios permanentes en tu sistema operativo actual. Simplemente inserta el dispositivo USB de arranque que creaste en el paso anterior, reinicia tu equipo y selecciona la opción “Probar Linux” en el menú de arranque. Esto cargará Linux desde el dispositivo USB y podrás experimentar su funcionalidad y características. ¡Es como hacer una prueba de manejo antes de decidirte!</p>
<p>Si te sientes cómodo y deseas instalar Linux de forma permanente en tu equipo, también tienes esa opción. Reinicia tu equipo con el dispositivo USB de arranque insertado y elige la opción <strong>“Instalar Linux”</strong> en el menú de arranque. Esto iniciará el asistente de instalación, donde podrás seguir los pasos sencillos para instalar Linux en tu disco duro. Recuerda que durante este proceso, se te pedirá que tomes decisiones, como la partición del disco y la configuración de usuario. ¡Pero no te preocupes, estaré aquí para guiarte!</p>
<p>Una tercera opción, si no deseas hacer cambios en tu disco duro principal, es utilizar una <strong>máquina virtual.</strong> Una máquina virtual es un entorno virtualizado en tu sistema operativo actual donde puedes ejecutar Linux como si fuera un programa. Existen varias aplicaciones de máquina virtual disponibles, como VirtualBox o VMware Player. Simplemente descarga e instala una de estas aplicaciones, crea una nueva máquina virtual, selecciona la imagen ISO de Linux y ¡voilà!, tendrás Linux funcionando dentro de tu sistema operativo actual.</p>
<p>¡Ya casi estás allí, valiente explorador! Estas son las opciones principales para probar o instalar Linux en tu equipo. Elige la que mejor se adapte a tus necesidades y nivel de comodidad. ¡No te preocupes, cualquier opción que elijas, te espera un emocionante viaje hacia el mundo de Linux!</p>


</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{achalma2023,
  author = {Achalma, Edison},
  title = {Descarga, {Instalación} y {Más} de {GNU/Linux}},
  date = {2023-06-19},
  url = {https://kapitan.net/informatica/operating-system/2023-06-19-03-instalacion-linux},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-achalma2023" class="csl-entry quarto-appendix-citeas">
Achalma, E. (2023, June 19). Descarga, Instalación y Más de GNU/Linux.
Retrieved from <a href="https://kapitan.net/informatica/operating-system/2023-06-19-03-instalacion-linux">https://kapitan.net/informatica/operating-system/2023-06-19-03-instalacion-linux</a>
</div></div></section></div> ]]></description>
  <category>Informática</category>
  <category>Tecnología</category>
  <category>Sistemas Operativos</category>
  <category>Linux</category>
  <guid>https://achalmaedison.netlify.app/informatica/operating-system/2023-06-19-03-instalacion-linux/</guid>
  <pubDate>Mon, 19 Jun 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Distribuciones de GNU/Linux</title>
  <dc:creator>Edison Achalma</dc:creator>
  <link>https://achalmaedison.netlify.app/informatica/operating-system/2023-06-18-02-distribuciones-linux/</link>
  <description><![CDATA[ 




<p>¡Bienvenido al fascinante mundo de las distribuciones de Linux! Si eres un entusiasta de la tecnología, un aficionado a la informática o simplemente estás buscando una alternativa al sistema operativo convencional, estás en el lugar adecuado. En este blog, exploraremos las diversas distribuciones de Linux, sus características únicas y las ventajas que ofrecen. Prepárate para descubrir un universo de posibilidades, personalización y libertad que te sorprenderá. ¡Acompáñanos en este apasionante viaje por las distribuciones de Linux y despierta tu curiosidad tecnológica!</p>
<section id="qué-es-una-distribución-de-linux" class="level1">
<h1>¿Qué es una distribución de Linux?</h1>
<p>En pocas palabras, una distribución de Linux es una versión completa y lista para usar del sistema operativo Linux. Piénsalo como un paquete que incluye el kernel de Linux (el núcleo del sistema operativo) junto con un conjunto de software adicional, como aplicaciones, controladores y herramientas.</p>
<p>La belleza de las distribuciones de Linux radica en su diversidad. Hay una amplia gama de distribuciones disponibles, cada una con su propio enfoque y características únicas. Algunas distribuciones están diseñadas para ser fáciles de usar y amigables para los principiantes, mientras que otras están orientadas a usuarios más avanzados o tienen un enfoque específico, como la seguridad o la privacidad.</p>
<p>Cada distribución tiene su propia identidad, con diferentes interfaces de usuario, opciones de personalización y filosofías subyacentes. Algunas de las distribuciones más populares incluyen Ubuntu, Linux Mint, Debian, Fedora y Arch Linux, por nombrar solo algunas.</p>
<p>La clave de una distribución de Linux es que todo su software es de código abierto, lo que significa que el código fuente está disponible para que cualquier persona lo vea, lo modifique y lo comparta. Esto promueve la colaboración y la innovación, y también garantiza que los usuarios tengan libertad para usar, modificar y distribuir el software de acuerdo con sus necesidades.</p>
</section>
<section id="familias-de-distribuciones-de-linux." class="level1">
<h1>Familias de distribuciones de Linux.</h1>
<p>Imagina que las distribuciones son como grandes familias, donde cada una comparte ciertas características y rasgos comunes. Estas familias se agrupan según su origen, sus objetivos y las filosofías que las guían.</p>
<p>Existen varias familias principales de distribuciones de Linux, y cada una tiene su propia personalidad. Permíteme presentarte algunas de las familias más destacadas:</p>
<ol type="1">
<li><p><strong>Debian</strong>: Esta es una de las familias más antiguas y respetadas en el mundo de Linux. Debian se enfoca en la estabilidad y la filosofía del software libre. Sus distribuciones derivadas, como Ubuntu y Linux Mint, son conocidas por su facilidad de uso y su amplia comunidad de usuarios.</p></li>
<li><p><strong>Red Hat</strong>: Esta familia se centra en el ámbito empresarial y en ofrecer soluciones robustas y confiables. Distribuciones como Red Hat Enterprise Linux (RHEL) y CentOS son populares en entornos empresariales y servidores.</p></li>
<li><p><strong>openSUSE</strong>: Con un enfoque en la facilidad de uso y la estabilidad, las distribuciones de la familia openSUSE son conocidas por su amigable entorno de escritorio y herramientas de administración poderosas.</p></li>
<li><p><strong>Arch Linux</strong>: Si eres un entusiasta de la personalización y disfrutas del desafío, la familia Arch Linux es para ti. Estas distribuciones ofrecen un enfoque “hágalo usted mismo”, lo que significa que tendrás que construir tu sistema desde cero, pero con la libertad de elegir cada componente.</p></li>
</ol>
<p>Estas son solo algunas de las familias de distribuciones de Linux más reconocidas, pero hay muchas más por explorar. Cada una tiene su propio conjunto de distribuciones derivadas, cada una con sus características y enfoques únicos.</p>
<p>Más adelante, nos adentraremos en cada una de estas familias y descubriremos qué las hace especiales.</p>
</section>
<section id="los-ciclos-de-lanzamiento" class="level1">
<h1>Los ciclos de lanzamiento</h1>
<p>Cada distribución tiene su propio ritmo de desarrollo y lanzamiento de nuevas versiones. Estos ciclos de lanzamiento determinan la frecuencia y la regularidad con la que se publican actualizaciones y mejoras en el sistema operativo.</p>
<p>Algunas distribuciones, como Ubuntu, siguen un ciclo de lanzamiento regular, con versiones programadas cada seis meses. Esto significa que puedes esperar nuevas características y actualizaciones con regularidad, lo que te permite mantener tu sistema al día de forma constante.</p>
<p>Por otro lado, existen distribuciones que optan por un ciclo de lanzamiento más conservador. Debian, por ejemplo, sigue un ciclo de lanzamiento estable y prefiere la estabilidad sobre las últimas novedades. Esto implica que las actualizaciones se lanzan con menos frecuencia, pero se centran en proporcionar un sistema confiable y sin problemas.</p>
<p>Además de los ciclos de lanzamiento regulares, algunas distribuciones ofrecen versiones LTS (Long Term Support) que brindan soporte extendido a largo plazo. Estas versiones suelen tener un ciclo de lanzamiento más largo, lo que garantiza actualizaciones de seguridad y soporte técnico durante un período más prolongado, ideal para entornos empresariales y usuarios que buscan estabilidad a largo plazo.</p>
</section>
<section id="soporte-y-las-actualizaciones" class="level1">
<h1>Soporte y las actualizaciones</h1>
<p>Una de las ventajas más destacadas de Linux es su sólido soporte y la constante mejora a través de actualizaciones. Veamos qué significa esto en la práctica.</p>
<p>Cuando hablamos de soporte, nos referimos a la atención técnica que recibes de la comunidad o el equipo de desarrollo de una distribución. La mayoría de las distribuciones de Linux cuentan con una activa comunidad en línea donde puedes encontrar ayuda, compartir conocimientos y resolver problemas.</p>
<p>Además, muchas distribuciones también ofrecen soporte oficial a través de foros, chats o incluso servicios de asistencia técnica. Esto es especialmente relevante si necesitas resolver problemas más complejos o si deseas un nivel de soporte profesional para entornos empresariales.</p>
<p>En cuanto a las actualizaciones, Linux destaca por su enfoque en la seguridad y la mejora continua. Las actualizaciones se lanzan regularmente para corregir errores, solucionar vulnerabilidades y añadir nuevas funcionalidades.</p>
<p>Es importante destacar que las actualizaciones en Linux no solo se limitan al sistema operativo en sí, sino también a las aplicaciones y los paquetes de software que utilizas. Esto significa que puedes mantener todo tu sistema actualizado y seguro de manera sencilla.</p>
<p>Además, muchas distribuciones ofrecen herramientas específicas para gestionar las actualizaciones, lo que facilita aún más el proceso. Puedes programar actualizaciones automáticas o realizarlas manualmente según tus preferencias.</p>
</section>
<section id="las-principales-distribuciones-de-linux" class="level1">
<h1>Las principales distribuciones de Linux</h1>
<ol type="1">
<li><p><strong>Ubuntu:</strong> Comenzamos con una de las distribuciones más populares y amigables para principiantes. Ubuntu destaca por su enfoque en la facilidad de uso y su amplia comunidad de usuarios dispuestos a brindar ayuda. Además, cuenta con una gran cantidad de software disponible y una interfaz intuitiva.</p></li>
<li><p><strong>Linux Mint:</strong> Si buscas una experiencia similar a la de Windows, Linux Mint es una excelente opción. Esta distribución se basa en Ubuntu y ofrece un entorno de escritorio familiar y fácil de navegar. También incluye una selección de software preinstalado y una gran estabilidad.</p></li>
<li><p><strong>Debian:</strong> Conocida por su estabilidad y robustez, Debian es una distribución sólida y confiable. Es utilizada tanto por usuarios domésticos como por profesionales de la industria. Además, cuenta con un amplio repositorio de software y una comunidad activa que se enfoca en la calidad y la seguridad.</p></li>
<li><p><strong>Fedora:</strong> Si eres un usuario más avanzado y te gusta estar a la vanguardia de las últimas tecnologías, Fedora es para ti. Esta distribución se destaca por su enfoque en la innovación y las características de vanguardia. También es respaldada por Red Hat, lo que garantiza un alto nivel de calidad y soporte.</p></li>
<li><p><strong>Arch Linux:</strong> Si buscas un nivel de personalización y control extremo, Arch Linux es la elección ideal. Esta distribución te permite construir tu sistema operativo desde cero, seleccionando y configurando cada componente según tus preferencias. Requiere un poco más de conocimiento técnico, pero ofrece una experiencia única y adaptada a tus necesidades.</p></li>
</ol>
</section>
<section id="las-mejores-distribuciones-de-linux-para-principiantes." class="level1">
<h1>Las mejores distribuciones de Linux para principiantes.</h1>
<p>Si estás dando tus primeros pasos en el mundo de Linux, estas opciones te brindarán una experiencia amigable y sin complicaciones.</p>
<ol type="1">
<li><p><strong>Ubuntu:</strong> Como ya mencionamos anteriormente, Ubuntu es una opción excelente para principiantes. Su interfaz intuitiva, amplia comunidad de usuarios y abundante documentación lo convierten en un punto de partida ideal. Además, cuenta con una versión de LTS (Soporte a Largo Plazo) que ofrece estabilidad y actualizaciones a largo plazo.</p></li>
<li><p><strong>Linux Mint:</strong> Si buscas una experiencia similar a la de Windows, Linux Mint es una elección popular. Su entorno de escritorio Cinnamon es familiar y fácil de navegar, lo que facilita la transición desde otros sistemas operativos. Además, incluye una selección de software preinstalado para comenzar rápidamente.</p></li>
<li><p><strong>Zorin OS:</strong> Diseñada específicamente para usuarios que migran desde Windows, Zorin OS ofrece un entorno de escritorio similar y una experiencia familiar. Con su enfoque en la facilidad de uso y la accesibilidad, es una excelente opción para aquellos que buscan una transición suave a Linux.</p></li>
<li><p><strong>elementary OS:</strong> Si valoras el diseño elegante y minimalista, elementary OS es una opción a considerar. Su apariencia limpia y cuidada se asemeja a macOS, lo que atrae a muchos usuarios. También cuenta con una selección de aplicaciones propias y se enfoca en brindar una experiencia fluida y cohesiva.</p></li>
</ol>
</section>
<section id="las-distribuciones-de-linux-más-fiables-y-robustas" class="level1">
<h1>Las distribuciones de Linux más fiables y robustas</h1>
<p>Si estás buscando estabilidad y seguridad para tus proyectos, estas opciones son ideales.</p>
<ol type="1">
<li><p><strong>Debian:</strong> Conocida por su enfoque en la estabilidad, Debian es una distribución sólida y confiable. Su riguroso proceso de pruebas garantiza un sistema robusto y libre de errores. Es ampliamente utilizada en servidores y entornos profesionales que requieren un rendimiento constante.</p></li>
<li><p><strong>openSUSE Leap:</strong> Si buscas una distribución que combine estabilidad y actualizaciones constantes, openSUSE Leap es una excelente elección. Basada en el proyecto SUSE Linux Enterprise, ofrece una plataforma sólida y segura para tus necesidades tanto personales como empresariales.</p></li>
</ol>
</section>
<section id="las-distribuciones-para-usuarios-avanzados" class="level1">
<h1>Las distribuciones para Usuarios Avanzados</h1>
<p>Si estás buscando una experiencia de Linux más personalizada y orientada a usuarios avanzados, estás en el lugar correcto. En esta ocasión, te presentaré algunas distribuciones ideales para aquellos que desean un mayor control y flexibilidad en su sistema operativo.</p>
<ol type="1">
<li><p><strong>Fedora:</strong> Si eres un entusiasta de la tecnología y te encanta estar a la vanguardia, Fedora es una excelente elección. Con su enfoque en la innovación y las últimas características, esta distribución te permitirá experimentar con las últimas herramientas y tecnologías de software.</p></li>
<li><p><strong>Arch Linux:</strong> Para aquellos que buscan un control total sobre su sistema, Arch Linux es la opción perfecta. Con un enfoque minimalista y una instalación desde cero, te permite construir un sistema adaptado a tus necesidades específicas. Prepárate para sumergirte en el mundo de la personalización y la configuración avanzada.</p></li>
</ol>
</section>
<section id="las-distribuciones-para-servidores" class="level1">
<h1>Las distribuciones para Servidores</h1>
<p>Si estás interesado en utilizar Linux como plataforma de servidor. En este apartado, te presentaré algunas distribuciones especialmente diseñadas para satisfacer las necesidades de los entornos de servidor.</p>
<ol type="1">
<li><strong>Ubuntu Server:</strong> Una opción popular y ampliamente utilizada en el ámbito de los servidores es Ubuntu Server. Con su enfoque en la estabilidad, seguridad y facilidad de uso, esta distribución es perfecta tanto para principiantes como para usuarios más experimentados. Además, cuenta con una gran comunidad de soporte y una amplia variedad de aplicaciones disponibles.</li>
</ol>
</section>
<section id="las-distribuciones-comerciales" class="level1">
<h1>Las distribuciones comerciales</h1>
<p>Están especialmente diseñadas para entornos empresariales. Si buscas una solución confiable y respaldada por un soporte profesional, estas distribuciones son ideales para ti. ¡Veamos algunas de las principales opciones disponibles!</p>
<ol type="1">
<li><p><strong>Red Hat Enterprise Linux (RHEL):</strong> Considerada una de las distribuciones más sólidas y estables del mercado, RHEL ofrece un alto nivel de rendimiento, seguridad y escalabilidad. Esta distribución cuenta con un amplio respaldo de Red Hat, una reconocida empresa en el ámbito de Linux, lo que garantiza un soporte técnico y actualizaciones de calidad.</p></li>
<li><p><strong>SUSE Linux Enterprise:</strong> Otra opción destacada en el ámbito empresarial es SUSE Linux Enterprise. Con su enfoque en la estabilidad y la interoperabilidad, esta distribución ofrece una amplia gama de herramientas y características diseñadas específicamente para satisfacer las necesidades de las empresas. Además, cuenta con un sólido respaldo de SUSE, una empresa líder en soluciones de código abierto.</p></li>
</ol>
</section>
<section id="otras-distribuciones" class="level1">
<h1>Otras distribuciones</h1>
<p>Quiero presentarte algunas distribuciones de Linux que no pertenecen a categorías específicas, pero que son igualmente interesantes y valiosas en su propio derecho. Estas distribuciones se destacan por ofrecer características únicas y enfoques diferentes. ¡Veamos algunas de ellas!</p>
<ol type="1">
<li><p><strong>Kali Linux:</strong> Si estás interesado en la seguridad informática y las pruebas de penetración, Kali Linux es la distribución perfecta para ti. Viene preinstalada con una amplia gama de herramientas de seguridad y ofrece un entorno propicio para realizar pruebas éticas y evaluar la seguridad de los sistemas.</p></li>
<li><p><strong>Qubes OS:</strong> Si la privacidad y el aislamiento son tus principales preocupaciones, Qubes OS es una opción fascinante. Esta distribución se centra en la seguridad y el aislamiento de los diferentes entornos de trabajo. Te permite ejecutar diferentes aplicaciones en entornos separados y asegura que tu actividad en línea esté protegida y aislada.</p></li>
</ol>
<p>En nuestro próximo artículo, nos adentraremos en otros aspectos emocionantes de Linux. ¡No te lo pierdas! ¡Continúa explorando con nosotros y descubriendo todo lo que Linux tiene para ofrecerte! ¡Hasta pronto!</p>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{achalma2023,
  author = {Achalma, Edison},
  title = {Distribuciones de {GNU/Linux}},
  date = {2023-06-18},
  url = {https://kapitan.net/informatica/operating-system/2023-06-18-02-distribuciones-linux},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-achalma2023" class="csl-entry quarto-appendix-citeas">
Achalma, E. (2023, June 18). Distribuciones de GNU/Linux. Retrieved from
<a href="https://kapitan.net/informatica/operating-system/2023-06-18-02-distribuciones-linux">https://kapitan.net/informatica/operating-system/2023-06-18-02-distribuciones-linux</a>
</div></div></section></div> ]]></description>
  <category>Informática</category>
  <category>Tecnología</category>
  <category>Sistemas Operativos</category>
  <category>Linux</category>
  <guid>https://achalmaedison.netlify.app/informatica/operating-system/2023-06-18-02-distribuciones-linux/</guid>
  <pubDate>Sun, 18 Jun 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Linux Primeros Pasos</title>
  <dc:creator>Edison Achalma</dc:creator>
  <link>https://achalmaedison.netlify.app/informatica/operating-system/2023-05-02-linux-primeros-pasos/</link>
  <description><![CDATA[ 




<section id="linux-primeros-pasos-como-usuario" class="level1">
<h1>LINUX primeros pasos como usuario</h1>
<p>SISTEMAS OPERATIVOS</p>
<p>SISTEMA OPERATIVO es el conjunto de programas que proporciona los mecanismos y reglas básicas de funcionamiento para acceder a los recursos del ordenador de forma adecuada, especialmente a todos los dispositivos periféricos.</p>
<ul>
<li><strong>MS-DOS</strong></li>
<li><strong>WINDOWS</strong></li>
<li><strong>Mac-OS</strong></li>
<li><strong>UNIX</strong>&nbsp;(Grandes máquinas)&nbsp;——&nbsp;&nbsp;<strong>LINUX</strong>&nbsp;(PCs)</li>
</ul>
<p>Tipos de programas:</p>
<ul>
<li><strong>Programas de Control</strong>: Gestión de software y hardware, p.e. colas de impresión, etc.</li>
<li><strong>Utilidades del sistema</strong>: editores de texto, compiladores, gestión de correo, etc.</li>
</ul>
<p>ORIGEN Y DESARROLLO DE LINUX</p>
<ul>
<li>Creado por&nbsp;<strong>Linus Torvalds</strong>&nbsp;en 1991. Inspirado en&nbsp;<strong>UNIX</strong>.</li>
<li>Sistema&nbsp;<strong>multiusuario</strong>&nbsp;y&nbsp;<strong>multitarea</strong>.</li>
<li>Desarrollado por miles de programadores en la red.</li>
<li>Filosofía&nbsp;<strong>GNU</strong>. Libre distribución bajo&nbsp;<strong>GPL</strong>&nbsp;(General Public License).</li>
<li>No garantizado. Flexible, estable y barato.</li>
<li>Al principio no era fácil de usar, porque estaba pensado para programadores.</li>
<li>Cada vez se desarrollan más aplicaciones y utilidades pensando en usuarios no programadores, para facilitar el uso de INTERNET y competir con WINDOWS.</li>
</ul>
<p><strong>Distribuciones</strong>: Núcleo (<strong>Kernel</strong>) de Linux +&nbsp; Aplicaciones y Utilidades para un grupo específico de usuarios</p>
<ul>
<li>Algunas distribuciones son gratuitas y otras no.</li>
<li>Algunas de las distribuciones están mantenidas por empresas comerciales (ej. RedHat, Fedora, openSUSE, Ubuntu), y otras son mantenidas por una comunidad de programadores (ej. Debian).</li>
<li>Normalmente se obtiene una distribución descargándola de Internet.</li>
<li>Distribuciones mas usadas:
<ul>
<li><strong>Debian</strong></li>
<li><strong>Slackware</strong></li>
<li><strong>SUSE</strong></li>
<li><strong>Caldera</strong></li>
<li><strong>Red Hat Enterprise Linux</strong>(comercial)</li>
<li><strong>Fedora Project</strong>&nbsp;(basada en RedHat)</li>
<li><strong>Mandriva</strong>&nbsp;(basada en RedHat)</li>
<li><strong>Ubuntu</strong>&nbsp;(basada en Debian)</li>
<li><strong>Guadalinex</strong>&nbsp;(basado en Debian, promovido por la Junta de Andalucía)</li>
</ul></li>
</ul>
<p>PRIMEROS PASOS</p>
<p><strong>ARRANQUE DEL SISTEMA</strong></p>
<ul>
<li><strong>LILO o GRUB:</strong>&nbsp;programa que se encarga de arrancar el S.O. deseado por el usuario cuando coexisten Windows y Linux</li>
</ul>
<p><strong>INICIO DE UNA SESIÓN DE USUARIO</strong></p>
<ul>
<li><strong>Login</strong>:Nombre del usuario.</li>
<li><strong>Password</strong>: Contraseña secreta de acceso privado de cada usuario. (Sólo aparecen asteriscos cuando se teclea)</li>
</ul>
<p><strong>ELECCIÓN DE PASSWORDS</strong></p>
<p>La utilización de passwords está hoy en día extendida a muchos aspectos de la vida cotidiana, no sólo a la utilización de máquinas compartidas.</p>
<p>La elección de un&nbsp;<strong>password seguro</strong>&nbsp;es tanto más crucial cuanto mayor sea la importancia de lo que “protege”: cuentas bancarias, messenger, cuenta de e-mail, reserva de biletes de tren, etc.</p>
<p>Passwords no seguros pueden ser averiguados por programas especializados en un tiempo inferior a 1 segundo (por ejemplo para una palabra de diccionario) o en pocas horas (passwords de hasta 6 caracteres formados por letras mayúsculas, minúsculas y números).</p>
<p>Variantes del tipo sustituir A por 4 , la E por un 3, o la I por un 1 están ya incorporadas en los crackers.</p>
<p>Recomendación para passwords importantes:</p>
<ul>
<li>Utilizar passwords cuanto más largos mejor, al menos de 6 caracteres (mejor 8)</li>
<li>Utilizar letras mayúsculas, minúsculas, números y caracteres especiales&nbsp; como&nbsp;<strong>! ” $ % &amp; / ( ) = ? ¿</strong></li>
<li>El tiempo para crackear un password así con 8 caracteres es de 39 años !!!</li>
</ul>
<p>Lo que NO debes hacer con un password:</p>
<ul>
<li>Apuntarlo en un post-it y pegarlo en la pantalla</li>
<li>Decírselo a cualquiera</li>
<li>Usar palabras de un diccionario, ni siquiera concatenadas (megustaminovio)</li>
<li>Usar passwords de menos de 6 caracteres</li>
<li>Llevar las claves de tarjetas y los passwords de las cuentas bancarias por internet en la cartera, o en una agenda en el bolso.</li>
</ul>
<p><strong>EL PROBLEMA DE LOS BUENOS PASSWORDS ES ACORDARSE DE ELLOS: aqui tienes un truco</strong></p>
<p>Piensa en una frase y utiliza las iniciales de las palabras, mezcladas con números y algún signo, de forma que&nbsp; puedas recordarla.</p>
<p>Ejemplos:</p>
<p><strong>E95faP+L</strong></p>
<p>(El 95 fui a Paris y Londres)</p>
<p><strong>Uiv+q%p</strong></p>
<p>(Una imagen vale más que 100 palabras)</p>
<p><strong>2+2s4!</strong></p>
<p>(dos más dos son cuatro!)</p>
<p><strong>$90%pa</strong></p>
<p>(somos 90 por ciento pura agua)</p>
<p><strong>VaLy$l</strong></p>
<p>(Vente conmigo a Lepe y serás lepera)</p>
<p>Puedes crear tus propias reglas personales: elegir las segundas letras, tomar las dos primeras …</p>
<p><strong>CAMBIO DEL PASSWORD DE USUARIO</strong></p>
<ol type="1">
<li>Elegir una contraseña nueva atendiendo a las recomendaciones anteriores.</li>
<li>Abrir un Emulador de Terminal desde el panel.</li>
<li>Teclear en la Linea de Comandos del terminal una de los siguientes instrucciones:</li>
</ol>
<ul>
<li><strong>passwd</strong>&nbsp;(para instalaciones locales de Linux)</li>
<li><strong>yppasswd</strong>&nbsp;(para instalaciones de Linux con sistema de archivos compartidos)</li>
</ul>
<ol start="5" type="1">
<li>Teclear la contraseña actual.&nbsp; (No se visualiza)</li>
<li>Teclear la nueva contraseña.&nbsp; (No se visualiza)</li>
<li>Confirmar la nueva contraseña. (No se visualiza)</li>
<li>Salir del terminal con la instrucción&nbsp;<strong>exit</strong></li>
</ol>
<p><strong>SALIDA DE LA SESIÓN</strong></p>
<ul>
<li>Sesión Failsafe:&nbsp; tecleando&nbsp;&nbsp;<strong>exit</strong></li>
<li>Sesiones en entorno de ventanas:&nbsp; eligiendo&nbsp;<strong>Terminar</strong>&nbsp;en el&nbsp;<strong>Menú de Inicio</strong>.</li>
</ul>
<p><strong>CIERRE DEL SISTEMA</strong></p>
<ul>
<li>Eligiendo&nbsp;<strong>Apagar</strong>&nbsp;o&nbsp;<strong>Reiniciar</strong>&nbsp;en el&nbsp;<strong>Menú Sistema</strong></li>
</ul>
<p>SISTEMA MULTIUSUARIO</p>
<ul>
<li><p>LINUX&nbsp; puede tener habilitados muchos usuarios.</p></li>
<li><p>Pueden trabajar simultáneamente a través de la red.</p></li>
<li><p>Cada usuario tiene una&nbsp;<strong>cuota de disco</strong>&nbsp;duro, una cantidad máxima de disco que puede usar.</p></li>
<li><p>Hay un superusuario llamado&nbsp;&nbsp;<strong>root</strong>&nbsp; que actua como administrador del sistema y que dispone de permisos PARA TODO. Son funciones exclusivas del&nbsp;&nbsp;<strong>root</strong>:</p></li>
<li><p>Habilitar y deshabilitar usuarios.</p></li>
<li><p>Cambiar contraseñas de otros usuarios.</p></li>
<li><p>Asignar o modificar las cuotas de disco.</p></li>
<li><p>Decidir qué aplicaciones y utilidades puede usar cada usuario.</p></li>
<li><p>Organizar a los usuarios por grupos.</p></li>
<li><p>Instalar o desinstalar programas.</p></li>
</ul>
<p><strong>Nota:</strong>&nbsp;Es muy importante reservar el usuario&nbsp;<strong>root</strong>&nbsp;exclusivamente para labores de administración del sistema, incluso cuando se instale un sistema LINUX particular, es decir, que vaya a ser utilizado por un único usuario. Debe tenerse en cuenta que, debido a que el&nbsp;<strong>root</strong>&nbsp;dispone de TODOS LOS PERMISOS, un error puede resultar catastrófico. Por ello se debe dar de alta, al menos, un usuario “corriente” y trabajar habitualmente con esa cuenta. Utilizar la cuenta del&nbsp;<strong>root</strong>&nbsp;sólo para administración, instalación de nuevo software, etc.</p>
<p><strong>NUNCA</strong>&nbsp;utilices la cuenta del&nbsp;<strong>root</strong>&nbsp;para acceder a Internet. Y esmérate con su password.</p>
<p>MODOS DE TRABAJO</p>
<ul>
<li><p><strong>Modo de comandos</strong>: El usuario se comunica con el ordenador mediante la&nbsp;<strong>Linea de Comandos</strong>&nbsp;de un terminal o de un emulador de terminal. Estos comandos o instrucciones pueden ser interpretados por el sistema usando diferentes programas denominados&nbsp;<strong>Shell</strong>. (Lo usaremos sólo esporádicamente).</p></li>
<li><p><strong>Modo gráfico</strong>: El usuario se comunica con el ordenador&nbsp; mediante un&nbsp;<strong>Interfaz Gráfico de Usuario</strong>&nbsp;(<strong>GUI</strong>) que se encarga de interpretar las diferentes acciones realizadas con el teclado o con el ratón sobre diferentes objetos gráficos como&nbsp;<strong>iconos</strong>,&nbsp;<strong>botones</strong>,&nbsp;<strong>ventanas</strong>,&nbsp;&nbsp;<strong>menús</strong>,&nbsp;<strong>barras de desplazamiento</strong>&nbsp;(<strong>scroll</strong>),&nbsp;<strong>lineas separadoras</strong>, etc.</p></li>
<li><p>En UNIX, el GUI habitual es el sistema&nbsp;<strong>X Window</strong>&nbsp;que está formado fundamentalmente por dos programas:</p></li>
<li><p><strong>Servidor X</strong>&nbsp;(<strong>X Server</strong>): programa que dibuja en la pantalla los objetos gráficos</p></li>
<li><p><strong>Gestor de Ventanas</strong>&nbsp;(<strong>Window Manager</strong>): los más usados son&nbsp;&nbsp;<strong>GNOME</strong>&nbsp;y&nbsp;&nbsp;<strong>KDE</strong>.</p></li>
</ul>
<p>SISTEMA DE ARCHIVOS Y CARPETAS</p>
<p><strong>NOMBRES DE FICHEROS Y DIRECTORIOS</strong></p>
<p><strong>Archivos o Ficheros</strong>&nbsp;(<strong>Files</strong>) : Reglas para los nombres</p>
<ul>
<li><p>De 1 a&nbsp; 255 caracteres. Se pueden usar todos menos el&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*<strong>*/**</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; aunque …</p></li>
<li><p>No es recomendable usar caracteres como&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>=&nbsp;&nbsp; ^&nbsp;&nbsp; ~&nbsp;&nbsp; ’&nbsp;&nbsp; “&nbsp;&nbsp; `&nbsp;&nbsp; *&nbsp;&nbsp; ;&nbsp;&nbsp; -&nbsp;&nbsp; ?&nbsp;&nbsp; [ ] ( ) ! &amp;&nbsp;&gt;&nbsp;&lt;</strong></p></li>
<li><p>Pueden aparecer sólo números</p></li>
<li><p>Se distinguen mayúsculas y minúsculas: README no es lo mismo que ReaDme</p></li>
<li><p>IMPORTANTE: Si se van a compartir archivos con WINDOWS no se debe usar esa distinción</p></li>
<li><p>Los nombres de archivos pueden, aunque no es necesario, llevar una extensión o sufijo (lo que aparece al final del nombre, después de un punto) : &nbsp;&nbsp;&nbsp;<strong>Nombre.extension</strong></p></li>
<li><p>Las extensiones sirven principalmente a título orientativo. Algunos programas reconocen determinadas extensiones y las aceptan “por defecto”:</p></li>
<li><p><strong>txt</strong>&nbsp;para archivos de texto</p></li>
<li><p><strong>htm</strong>&nbsp; y&nbsp;<strong>html</strong>&nbsp;para archivos de hipertexto (formato usual de las páginas de Internet)</p></li>
<li><p><strong>png</strong>,&nbsp;&nbsp;<strong>tif</strong>,&nbsp;&nbsp;<strong>jpg</strong>&nbsp;y&nbsp;<strong>gif</strong>&nbsp;para archivos de imagenes en distintos formatos</p></li>
<li><p><strong>f</strong>&nbsp; y &nbsp;<strong>f90</strong>&nbsp;para archivos fuente en lenguaje Fortran</p></li>
<li><p><strong>m</strong>&nbsp; archivos conteniendo programas MATLAB</p></li>
<li><p>etc.</p></li>
</ul>
<p><strong>Carpetas o Directorios</strong>&nbsp;(<strong>Folder</strong>&nbsp;o&nbsp;<strong>Directory</strong>)</p>
<ul>
<li>Tipo especial de fichero que contiene a su vez otros ficheros y/o subcarpetas.</li>
<li>Mismas reglas para los nombres que los ficheros.</li>
<li>Las carpetas no suelen tener extensiones.</li>
</ul>
<p><strong>ESTRUCTURA DEL SISTEMA DE FICHEROS</strong></p>
<p>El sistema de archivos es, más o menos, “la forma de organizar la información almacenada en el disco duro”. La mayoría de los sistemas operativos posee su propio sistema de archivos. El sistema de archivos nativo de Linux es el&nbsp;<strong>EXT2</strong>. Normalmente, los sistemas operativos proveen los mecanismos para crear, mover, renombrar y eliminar tanto archivos como directorios.</p>
<p>La estructura de directorios suele ser jerárquica, ramificada o “en árbol”:</p>
<p>La estructura de directorios que sigue Linux es similar a la de cualquier sistema UNIX. La estructura del sistema de archivos NO está ligada de forma directa a la estructura de hardware. A diferencia de Windows, es independiente del número de discos duros, disqueteras o CDROMs. No hay una “unidad” para cada unidad física de disco o partición como en Windows (<strong>A:**,&nbsp;</strong>C:**, etc.), sino que todos los discos duros o de red se montan bajo un sistema de directorios en árbol, y algunos de esos directorios enlazan con estas unidades físicas de disco. IMPORTANTE: Las barras en Linux al igual que en cualquier UNIX son inclinadas hacia la derecha, como se puede ver más abajo (ese es el motivo de que en internet sean inclinadas hacia la derecha, ya que nació bajo UNIX).</p>
<ul>
<li><p>Estructura jerárquica de árbol invertido:</p></li>
<li><p>Desde una&nbsp;<strong>carpeta raiz</strong>, denotada por&nbsp;&nbsp;/&nbsp;, “cuelgan” otros archivos y/o carpetas.</p></li>
<li><p>De cada subcarpeta pueden “colgar” a su vez otros archivos y/o carpetas.</p></li>
<li><p>etc</p></li>
<li><p>“Colgar” significa&nbsp; “estar contenido en”</p></li>
<li><p>Todos los archivos y/o carpetas están&nbsp; finalmente colgados de la carpeta raíz&nbsp;&nbsp;/</p></li>
<li><p>Carpeta “<strong>padre</strong>” de una carpeta es aquella que la contiene y está en el nivel inmediatamente superior de la estructura de árbol.</p></li>
</ul>
<p>La ubicación de un fichero en la estructura de archivos se denota mediante su&nbsp;<strong>path</strong>&nbsp;ó&nbsp;<strong>ruta</strong>: se trata de una cadena de caracteres que incluye todo el “camino” de directorios que llevan desde el directorio raiz (&nbsp;&nbsp;/&nbsp;&nbsp;) hasta el fichero considerado. Se separa un directorio del siguiente de nuevo mediante el caracter especial &nbsp;&nbsp;/&nbsp;&nbsp; .</p>
<p>Ejemplo: el path&nbsp;&nbsp;<strong>/usr/local/bin/readme.txt</strong>&nbsp;&nbsp;indica la ubicación del fichero de nombre&nbsp;&nbsp;<strong>readme.txt</strong>&nbsp;&nbsp;que cuelga de la carpeta&nbsp;&nbsp;<strong>bin</strong>&nbsp;&nbsp;que a su vez cuelga de la carpeta&nbsp;&nbsp;<strong>local</strong>&nbsp;&nbsp;que a su vez cuelga de la carpeta&nbsp;&nbsp;<strong>usr</strong>&nbsp;&nbsp;que cuelga de la raiz del sistema de archivos &nbsp;&nbsp;/&nbsp;&nbsp;.</p>
<p><strong>ALGUNOS DIRECTORIOS IMPORTANTES</strong></p>
<p>Los directorios principales que podemos encontrar en cualquier sistema Linux son:</p>
<p>Directorio</p>
<p>Descripción</p>
<p><strong>/</strong></p>
<p>Es la raíz del sistema de directorios. Aquí se monta la partición principal Linux EXT.</p>
<p><strong>/etc</strong></p>
<p>Contiene los archivos de configuración de la mayoría de los programas.</p>
<p><strong>/home</strong></p>
<p>Contiene los archivos personales de los usuarios.</p>
<p><strong>/bin</strong></p>
<p>Contiene comandos básicos y muchos programas.</p>
<p><strong>/dev</strong></p>
<p>Contiene archivos simbólicos que representan partes del hardware, tales como discos duros, memoria…</p>
<p><strong>/mnt</strong></p>
<p>Contiene subdirectorios donde se montan (se enlaza con) otras particiones de disco duro, CDROMs, etc.</p>
<p><strong>/tmp</strong></p>
<p>Ficheros temporales o de recursos de programas.</p>
<p><strong>/usr</strong></p>
<p>Programas y librerías instalados con la distribución</p>
<p><strong>/usr/local</strong></p>
<p>Programas y librerías instalados por el administrador</p>
<p><strong>/sbin</strong></p>
<p>Comandosadministrativos</p>
<p><strong>/lib</strong></p>
<p>Librerías varias y módulos (“trozos”) del kernel</p>
<p><strong>/var</strong></p>
<p>Datos varios como archivos de log (registro de actividad) de programas, bases de datos, contenidos del servidor web, copias de seguridad…</p>
<p><strong>/proc</strong></p>
<p>Información temporal sobre los procesos del sistema (explicaremos esto más en profundidad posteriormente).</p>
<p><strong>OTROS CONCEPTOS RELACIONADOS CON DIRECTORIOS:</strong></p>
<ul>
<li><p><strong>Directorio</strong>&nbsp;o&nbsp;<strong>Carpeta de trabajo (Working Directory)</strong>: es, en cada momento, el directorio en que se está trabajando. Cualquier fichero que el S.O. tenga que buscar, lo hará en primer lugar en dicho directorio.</p></li>
<li><p><strong>Ruta</strong>&nbsp;<strong>(Path) de un fichero</strong>: secuencia de directorios, separados por el símbolo&nbsp;<strong>/</strong>,&nbsp; que se ha de recorrer en la estructura de árbol para llegar a un fichero determinado.</p></li>
<li><p><strong>Path absoluto</strong>: muestra toda la ruta desde la raiz del sistema de ficheros&nbsp;<strong>/</strong></p></li>
<li><p><strong>Path relativo</strong>: muestra la ruta desde el directorio de trabajo.&nbsp; Puede empezar en:</p></li>
<li><p>una subdirectorio del directorio de trabajo,&nbsp; si el camino es descendente</p></li>
<li><p><strong>. .</strong>&nbsp;&nbsp;si el camino comienza de forma ascendente</p></li>
<li><p><strong>.</strong>&nbsp;&nbsp; denota el directorio de trabajo</p></li>
<li><p><strong>. .</strong>&nbsp;&nbsp;denota el directorio padre del directorio de trabajo</p></li>
<li><p><strong>Directorio o carpeta personal</strong>&nbsp;de un usuario (<strong>home directory</strong>): es el que contiene los ficheros de un usuario del sistema. Cada usuario tiene su propio directorio personal. Frecuentemente, los directorios personales cuelgan del directorio&nbsp;<strong>/home</strong>, es decir, son de la forma&nbsp;<strong>/home/usuario</strong>. Cuando se empieza una sesión en un sistema Linux, de forma automática se elige el&nbsp;<strong>home directory</strong>&nbsp;como&nbsp;<strong>working directory</strong>.</p></li>
</ul>
<p><strong>PUNTOS DE MONTAJE DE DISPOSITIVOS:</strong></p>
<p>En Linux, los distintos dispositivos conectados al ordenador forman parte del sistema de archivos, de manera que, una vez montados, para el usuario son como una carpeta más del sistema de ficheros. Habitualmente se montan en&nbsp;<strong>/mnt</strong><br>
Por ejemplo, la&nbsp;<strong>disquetera</strong>&nbsp;suele ser&nbsp;&nbsp;<strong>/mnt/floppy</strong>&nbsp;&nbsp;&nbsp; y el&nbsp;&nbsp;<strong>CDROM</strong>&nbsp;&nbsp; suele ser&nbsp;&nbsp;&nbsp;<strong>/mnt/cdrom</strong></p>
<p><strong>SISTEMAS DE ARCHIVOS COMPARTIDOS&nbsp;Yellow Pages</strong></p>
<p>Este sistema permite que un conjunto de máquinas con sistemas Linux&nbsp; conectadas en red compartan un sistema de archivos común. Esto permite que todos los usuarios de esas máquinas dispongan de todos sus archivos en todas las máquinas. En este caso, el sistema de archivos suele estar físicamente en una de las máquinas. Un usuario puede, así, acceder a cualquiera de las máquinas con el mismo login y el mismo password.</p>
<p>Cuando se usa el servicio yellow pages (páginas amarillas), para cambiar el password de un usuario es necesario utilizar el comando&nbsp;<strong>yppasswd</strong>&nbsp; en lugar de passwd.</p>
<p>PROPIEDAD, PERMISOS Y DERECHOS DE ACCESO A CARPETAS Y FICHEROS</p>
<p>Al ser Linux un sistema multiusuario, es preciso que esté definido de quién es cada cosa (carpetas y ficheros) y qué derechos de acceso tiene cada usuario.</p>
<p>Cada usuario es propietario, en general, de todos los ficheros y subdirectorios que cuelgan de su directorio personal: puede crear, modificar y borrar en él todo lo que quiera. Ningún otro usuario (excepto el root) puede acceder&nbsp;a los ficheros de otro, ni siquiera verlos.</p>
<p>En Linux, cada fichero y carpeta tiene un&nbsp;<strong>propietario</strong>&nbsp;(<strong>owner</strong>). El propietario es el que define los permisos de acceso de otros usuarios a sus ficheros. Para ello, el conjunto de usuarios de una máquina se entiende dividido en tres grupos:</p>
<ul>
<li>el mismo propietario (<strong>owner</strong>)</li>
<li>el grupo de usuarios al que pertenece el propietario (<strong>group</strong>)</li>
<li>el resto del mundo (<strong>world</strong>)</li>
</ul>
<p>Dichos permisos, a su vez, son de tres tipos:</p>
<ul>
<li>de lectura (<strong>read</strong>)</li>
<li>de escritura (<strong>write</strong>)</li>
<li>de ejecución (<strong>execute</strong>)</li>
</ul>
<p>Los permisos de acceso a un fichero sólo los puede cambiar el propietario y el (todopoderoso)&nbsp;<strong>root</strong>. En general, cada usuario puede leer en el resto de directorios del sistema de ficheros, excepto en la del root y en las de los otros usuarios.</p>
<ul>
<li>Los ficheros y carpetas del sistema son propiedad del root</li>
<li>Los ficheros y carpetas de programas instalados son propiedad del&nbsp; root</li>
<li>El&nbsp; root tiene todos los permisos sobre todos los ficheros de todos los usuarios.</li>
</ul>
<p>EL GESTOR DE VENTANAS KDE</p>
<p><strong>PANTALLA KDE:</strong></p>
<p><strong>Panel de KDE:</strong></p>
<ul>
<li>Menú de inicio de aplicaciones</li>
<li>Escritorios virtuales</li>
<li>Directorio Personal</li>
<li>Lista de ventanas abiertas</li>
<li>Emulador de Terminal</li>
<li>Editores sencillos: Kedit, Kwrite</li>
</ul>
<p><strong>Ventanas:</strong></p>
<ul>
<li><p>Barra de títulos:</p></li>
<li><p>Icono de aplicación (Manipulación de ventanas)</p></li>
<li><p>Fijación de ventana</p></li>
<li><p>Minimizar, maximizar y cerrar</p></li>
<li><p>Barra de menús</p></li>
<li><p>Barra de herramientas</p></li>
</ul>
<p><strong>Konqueror: Gestor gráfico de archivos (File Manager):</strong></p>
<ul>
<li>Navegar por la estructura de directorios</li>
<li>Crear y borrar carpetas</li>
<li>Copiar y mover carpetas</li>
<li>Cambiar nombre a ficheros y carpetas</li>
<li>Abrir y borrar ficheros</li>
<li>Ver y modificar las propiedades de ficheros y carpetas</li>
</ul>
<p><strong>Konsole: Emulador de terminal</strong></p>
<p>Se usa para trabajar con el Sistema Operativo en modo de comandos, es decir para introducir directamente instrucciones UNIX al sistema. Las instrucciones se escriben en la Línea de Comandos, después del&nbsp;<strong>prompt</strong>&nbsp;del usuario.</p>
<p><strong>ALGUNOS COMANDOS:</strong></p>
<p><strong>clear</strong></p>
<p>limpia la pantalla</p>
<p><strong>date</strong></p>
<p>devuelve la fecha y hora actuales</p>
<p><strong>cal</strong></p>
<p>muestra el calendario</p>
<p><strong>history</strong></p>
<p>muestra la historia de los últimos comandos usados</p>
<p><strong>man comando</strong></p>
<p>Muestra la página del manual correspondiente al comando</p>
<p><strong>more file</strong></p>
<p>Si&nbsp;<strong>file</strong>&nbsp;es un fichero de texto, lo muestra de página en página. Se pasa página con la barra espaciadora. Se termina con&nbsp;<strong>q</strong></p>
<p><strong>ls</strong></p>
<p>muestra el contenido del directorio de trabajo</p>
<p><strong>ls -l</strong></p>
<p>muestra el contenido del directorio de trabajo en forma de lista, incluyendo información extra</p>
<p><strong>ls -a</strong></p>
<p>muestra el contenido del directorio de trabajo incluídos los ficheros ocultos</p>
<p><strong>ls dir</strong></p>
<p>ejecuta&nbsp;<strong>ls</strong>&nbsp;sobre el directorio&nbsp;<strong>dir</strong>&nbsp;- se pueden usar opciones:&nbsp;<strong>ls -la dir</strong></p>
<p><strong>pwd</strong></p>
<p>muestra el nombre del directorio de trabajo (print working directory)</p>
<p><strong>df</strong></p>
<p>muestra el espacio libre y usado en los discos</p>
<p><strong>du -sk dir</strong></p>
<p>muestra la cantidad de espacio de disco usada por el directorio&nbsp;<strong>dir</strong>&nbsp;(y todo lo que hay dentro)</p>
<p><strong>du -Sk dir</strong></p>
<p>lo mismo, pero especificando por subdirectorios</p>
<p><strong>mkdir name</strong></p>
<p>crea un directorio de nombre&nbsp;<strong>name</strong>&nbsp;(make directory) - si&nbsp;<strong>name</strong>&nbsp;no incluye un&nbsp;<strong>path</strong>, el directorio se crea en el directorio de trabajo</p>
<p><strong>rm fich</strong></p>
<p>borra el fichero&nbsp;<strong>fich</strong>&nbsp;(remove)</p>
<p><strong>rmdir direc</strong></p>
<p>borra el directorio&nbsp;&nbsp;<strong>dir</strong>&nbsp;(tiene que estar vacío)</p>
<p><strong>rm -i fich</strong></p>
<p>antes de borrar el fichero&nbsp;<strong>fich</strong>, pide confirmación (modo interactivo)</p>
<p><strong>cp fich dir</strong></p>
<p>crea una copia del fichero&nbsp;<strong>fich</strong>&nbsp;en el directorio&nbsp;<strong>dir</strong></p>
<p><strong>cp fich1 fich2</strong></p>
<p>crea una copia del fichero&nbsp;<strong>fich1</strong>&nbsp;y le pone el nombre&nbsp;<strong>fich2</strong></p>
<p><strong>mv fich dir</strong></p>
<p>“mueve” el fichero&nbsp;<strong>fich</strong>&nbsp;&nbsp;al directorio&nbsp;<strong>dir</strong></p>
<p><strong>mv fich1 fich2</strong></p>
<p>“mueve” el fichero&nbsp;<strong>fich1</strong>&nbsp;&nbsp;al fichero&nbsp;<strong>fich2</strong>&nbsp;(es decir, lo cambia de nombre) (<strong>fich2</strong>&nbsp;puede también incluir un&nbsp;<strong>path</strong>; en ese caso también lo cambia de sitio)</p>
<p><strong>cd</strong></p>
<p>cambia el directorio de trabajo al directorio personal (home)</p>
<p><strong>cd dir</strong></p>
<p>cambia el directorio de trabajo al directorio&nbsp;<strong>dir</strong></p>
<p><strong>cd ..</strong></p>
<p>cambia el directorio de trabajo al “padre” del actual</p>
<p><strong>ps</strong></p>
<p>proporciona información sobre los procesos activos del usuario</p>
<p><strong>ps aux</strong></p>
<p>proporciona información sobre todos los procesos activos en el sistema</p>
<p><strong>kill -9 PID</strong></p>
<p>elimina el proceso con número de identificación PID</p>
<p><strong>gzip fich</strong></p>
<p>crea un fichero de nombre&nbsp;<strong>fich.gz</strong>, comprimido de&nbsp;<strong>fich</strong></p>
<p><strong>gunzip fich.gz</strong></p>
<p>descomprime el fichero&nbsp;<strong>fich.gz</strong></p>
<p><strong>tar</strong></p>
<p>condensa directorios en un sólo fichero y viceversa</p>
<p><strong>tar -cf file.tar direc</strong></p>
<p>crea el fichero&nbsp;<strong>file.tar</strong>&nbsp;con el contenido del directorio&nbsp;<strong>direc</strong></p>
<p><strong>tar -cvf file.tar direc</strong></p>
<p>lo mismo, pero con explicaciones (v==verbose)</p>
<p><strong>tar -xf file.tar</strong></p>
<p>extrae los ficheros de&nbsp;<strong>file.tar</strong></p>
<p><strong>tar -xvf file.tar</strong></p>
<p>los mismo, pero con explicaciones</p>
<p><strong>exit</strong></p>
<p>finaliza la sesión de trabajo; en un terminal, cierra el terminal.</p>
<p><strong>PERSONALIZACIÓN DE LAS CUENTAS:</strong></p>
<ul>
<li>el fichero de configuración&nbsp;<strong>.bashrc</strong></li>
<li>definición o modificación de comandos:&nbsp;<strong>alias</strong></li>
<li>variable de entorno&nbsp;<strong>PATH</strong>: definición de los caminos de búsqueda</li>
<li>ejecución de un fichero de configuración:&nbsp;<strong>source</strong></li>
</ul>
<p><strong>MODIFICACIÓN DEL FICHERO DE CONFIGURACIÓN .bahsrc PARA EL ACENTO ^ EN MATLAB:</strong></p>
<ul>
<li>En el directorio personal, editar el fichero oculto&nbsp;<strong>.bashrc</strong></li>
<li>Añadir, al final, la orden:&nbsp;<strong>setxkbmap -variant nodeadkeys</strong></li>
</ul>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{achalma2023,
  author = {Achalma, Edison},
  title = {Linux {Primeros} {Pasos}},
  date = {2023-05-02},
  url = {https://kapitan.net/informatica/operating-system/2023-05-02-linux-primeros-pasos},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-achalma2023" class="csl-entry quarto-appendix-citeas">
Achalma, E. (2023, May 2). Linux Primeros Pasos. Retrieved from <a href="https://kapitan.net/informatica/operating-system/2023-05-02-linux-primeros-pasos">https://kapitan.net/informatica/operating-system/2023-05-02-linux-primeros-pasos</a>
</div></div></section></div> ]]></description>
  <category>Informática</category>
  <category>Sistemas Operativos</category>
  <guid>https://achalmaedison.netlify.app/informatica/operating-system/2023-05-02-linux-primeros-pasos/</guid>
  <pubDate>Tue, 02 May 2023 05:00:00 GMT</pubDate>
</item>
</channel>
</rss>
