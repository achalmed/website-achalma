---
title: Docusaurus
format-name: docusaurus  
ssg-name: Docusaurus
ssg-description: |
  [Docusaurus](https://docusaurus.io) is a popular markdown documentation system
ssg-preview: docusaurus start
ssg-build: npm run build
---

{{< include _ssg-intro.qmd >}}

{{< include _ssg-workflow.qmd >}}

## Code Blocks

Code blocks in Docusaurus are very similar to Quarto. One important thing to keep in mind is that the syntax highlighting theme comes from Docusaurus rather than Quarto. See the [theming](https://docusaurus.io/docs/markdown-features/code-blocks#theming) documentation for additional details.

If you use the `filename` attribute in Quarto, it will automatically become the code block `title` in Docusaurus:

```` markdown
```{.python filename="hello.py"}
1 + 1
```
````

![](images/docusaurus-code-title.png)

Code folding is also automatically applied. So, for example the following executable code block:

``` python
```{{python}}
#| code-fold: true
1 + 1
```

Is rendered as a collasable block in Docusaurus:

![](images/docusaurus-code-fold.png)

## Callouts & Tabsets

Like Quarto, Docusaurus includes support for [Callouts](/docs/authoring/callouts.qmd) and [Tabsets](/docs/output-formats/html-basics.qmd#tabsets). When including these components in a document, you should use the Quarto standard markdown syntax, which will be automatically translated to the appropriate Docusaurus constructs.

For example, here is a Quarto callout:

``` markdown
::: {.callout-important}
Note the Quarto callout syntax is used here.
:::
```

Which renders in Docusaurus as:

![](images/docusaurus-callout.png)

Here is a Quarto tabset:

``` markdown
::: {.panel-tabset group="fruits"}

## Apple
This is an apple üçé

## Orange
This is an orange üçä

## Banana
This is a banana üçå

:::
```

Which renders in Docusaurus as:

![](images/docusaurus-tabs.png){.border}

## HTML and MDX

Docusaurus websites use a flavor of markdown ([MDX](https://mdxjs.com/)) that has some major differences from Pandoc (Quarto's native markdown renderer), the biggest of which is that while Quarto allows embedding of HTML, MDX does not. Rather, MDX allows direct embedding of JavaScript code and React JSX components (which look like HTML but have some significant differences in behavior).

Quarto's support for Docusaurus accounts for these differences, and enables you to embed raw HTML as well as use MDX components and JavaScript when required.

### HTML Blocks

Docusaurus websites don't allow arbitrary HTML content. Rather, JSX is used to emit HTML tags. While these JSX tags look and act like HTML tags most of the time, there are some important caveats and constraints, most notably that the `class` attribute must be written as `className`, and `style` attributes need to be specified as JavaScript objects rather than CSS strings.

If you need to include raw HTML that doesn't conform to JSX, you should use a raw ```` ```{=html} ```` code block. For example:

```` html
```{=html}
<p style="color: green;">Paragraph</p>
```
````

If you need to embed HTML code (e.g. a badge, video, or tweet) you should definitely use raw HTML blocks as shown above to avoid errors which will occur if JSX encounters tags it can't parse.

Note that HTML produced by computations (e.g. a Pandas data frame displayed in a notebook) often use raw HTML with `class` and/or `style` tags. This computational output is automatically included in a raw ```` ```{=html} ```` code block so that it renders correctly in Docusaurus.

### MDX Blocks

You can also use MDX components and JavaScript within Quarto documents that target Docusaurus. To do this, enclose them in an ```` ```{=mdx} ```` raw code block. For example:

```` html
```{=mdx}
export const Highlight = ({children, color}) => (
  <span
    style={{
      backgroundColor: color,
      borderRadius: '2px',
      color: '#fff',
      padding: '0.2rem',
    }}>
    {children}
  </span>
);

<Highlight color="#25c2a0">Docusaurus GREEN</Highlight> and <Highlight color="#1877F2">Rams blue</Highlight> are my favorite colors.

I can write **Markdown** alongside my _JSX_!
```
````

Which is rendered as follows:

![](images/docusaurus-mdx.png){.border}

Note that ordinary markdown content can also be included in `mdx` blocks alonside JavaScript and React components.

## LaTeX Math

By default, Quarto renders LaTeX math within Docusaurus projects using [WebTeX](https://github.com/KTHse/webtex), a service that creates PNG images for publishing on the web given TeX expressions as input.

{{< include _webtex-detail.md >}}

### KaTeX

It is possible to configure Docusaurus to use KaTeX for math rendering. See the Docusaurus documentation on [using KaTeX](https://docusaurus.io/docs/markdown-features/math-equations) to learn more about this option.

Once you've confirmed that KaTeX is rendering equations correctly in your site, you should update your `_quarto.yml` file to specify that `katex` rather than `webtex` should be used for rendering equations:

``` {.yaml filename="_quarto.yml"}
format:
  docusaurus-md:
    html-math-method: katex
```
